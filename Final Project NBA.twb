<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='master_table_clean (Final Project NBA)' inline='true' name='federated.14oa8eb1042dhv106fnc61b8jinn' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Final Project NBA' name='excel-direct.0v0owfs0qjhsdu138gycd1ti3sy2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Jayson Lima/Documents/California 2017/Data Analytics/Final Project/Final Project NBA.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0v0owfs0qjhsdu138gycd1ti3sy2' name='master_table_clean' table='[master_table_clean$]' type='table'>
          <columns gridOrigin='A1:AY5826:no:A1:AY5826:0' header='yes' outcome='2'>
            <column datatype='string' name='playerid' ordinal='0' />
            <column datatype='string' name='first_name' ordinal='1' />
            <column datatype='string' name='last_name' ordinal='2' />
            <column datatype='string' name='pos' ordinal='3' />
            <column datatype='integer' name='height_feet' ordinal='4' />
            <column datatype='real' name='height_inches' ordinal='5' />
            <column datatype='integer' name='weight' ordinal='6' />
            <column datatype='integer' name='year' ordinal='7' />
            <column datatype='string' name='tmid' ordinal='8' />
            <column datatype='integer' name='gp' ordinal='9' />
            <column datatype='integer' name='minutes' ordinal='10' />
            <column datatype='real' name='minutes_per_game' ordinal='11' />
            <column datatype='integer' name='points' ordinal='12' />
            <column datatype='real' name='points_per_game' ordinal='13' />
            <column datatype='integer' name='orebound' ordinal='14' />
            <column datatype='integer' name='drebound' ordinal='15' />
            <column datatype='integer' name='rebounds' ordinal='16' />
            <column datatype='real' name='rebounds_per_game' ordinal='17' />
            <column datatype='integer' name='assists' ordinal='18' />
            <column datatype='real' name='assists_per_game' ordinal='19' />
            <column datatype='integer' name='steals' ordinal='20' />
            <column datatype='real' name='steals_per_game' ordinal='21' />
            <column datatype='integer' name='blocks' ordinal='22' />
            <column datatype='real' name='blocks_per_game' ordinal='23' />
            <column datatype='integer' name='turnovers' ordinal='24' />
            <column datatype='real' name='turnovers_per_game' ordinal='25' />
            <column datatype='integer' name='pf' ordinal='26' />
            <column datatype='real' name='fouls_per_game' ordinal='27' />
            <column datatype='integer' name='fgattempted' ordinal='28' />
            <column datatype='integer' name='fgmade' ordinal='29' />
            <column datatype='real' name='fg%' ordinal='30' />
            <column datatype='integer' name='ftattempted' ordinal='31' />
            <column datatype='integer' name='ftmade' ordinal='32' />
            <column datatype='real' name='ft%' ordinal='33' />
            <column datatype='integer' name='threeattempted' ordinal='34' />
            <column datatype='integer' name='threemade' ordinal='35' />
            <column datatype='real' name='3pt%' ordinal='36' />
            <column datatype='string' name='draftyear' ordinal='37' />
            <column datatype='string' name='draftround' ordinal='38' />
            <column datatype='string' name='draftselection' ordinal='39' />
            <column datatype='string' name='college' ordinal='40' />
            <column datatype='integer' name='birthdate' ordinal='41' />
            <column datatype='string' name='birthcity' ordinal='42' />
            <column datatype='string' name='birthstate' ordinal='43' />
            <column datatype='string' name='birthcountry' ordinal='44' />
            <column datatype='string' name='highschool' ordinal='45' />
            <column datatype='string' name='hscity' ordinal='46' />
            <column datatype='string' name='hsstate' ordinal='47' />
            <column datatype='string' name='hscountry' ordinal='48' />
            <column datatype='string' name='allstarseason' ordinal='49' />
            <column datatype='string' name='allnba_award' ordinal='50' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>playerid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[playerid]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>playerid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[first_name]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[last_name]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pos]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>pos</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height_feet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[height_feet]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>height_feet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height_inches</remote-name>
            <remote-type>5</remote-type>
            <local-name>[height_inches]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>height_inches</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tmid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tmid]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>tmid</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gp]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>gp</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minutes]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>minutes</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minutes_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[minutes_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>minutes_per_game</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[points]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>points</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[points_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>points_per_game</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orebound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orebound]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>orebound</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drebound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drebound]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>drebound</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rebounds]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>rebounds</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rebounds_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rebounds_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>rebounds_per_game</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>assists</remote-name>
            <remote-type>20</remote-type>
            <local-name>[assists]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>assists</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>assists_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[assists_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>assists_per_game</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>steals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[steals]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>steals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>steals_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[steals_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>steals_per_game</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blocks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[blocks]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>blocks</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blocks_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blocks_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>blocks_per_game</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>turnovers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[turnovers]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>turnovers</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>turnovers_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[turnovers_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>turnovers_per_game</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pf</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pf]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>pf</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fouls_per_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fouls_per_game]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>fouls_per_game</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fgattempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fgattempted]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>fgattempted</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fgmade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fgmade]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>fgmade</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fg%]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>fg%</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ftattempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ftattempted]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>ftattempted</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ftmade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ftmade]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>ftmade</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft%]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>ft%</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>threeattempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[threeattempted]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>threeattempted</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>threemade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[threemade]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>threemade</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3pt%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3pt%]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>3pt%</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draftyear</remote-name>
            <remote-type>130</remote-type>
            <local-name>[draftyear]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>draftyear</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draftround</remote-name>
            <remote-type>130</remote-type>
            <local-name>[draftround]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>draftround</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draftselection</remote-name>
            <remote-type>130</remote-type>
            <local-name>[draftselection]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>draftselection</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college</remote-name>
            <remote-type>130</remote-type>
            <local-name>[college]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>college</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birthdate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birthdate]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>birthdate</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birthcity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[birthcity]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>birthcity</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birthstate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[birthstate]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>birthstate</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birthcountry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[birthcountry]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>birthcountry</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highschool</remote-name>
            <remote-type>130</remote-type>
            <local-name>[highschool]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>highschool</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hscity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hscity]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>hscity</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hsstate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hsstate]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>hsstate</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hscountry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hscountry]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>hscountry</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>allstarseason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[allstarseason]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>allstarseason</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>allnba_award</remote-name>
            <remote-type>130</remote-type>
            <local-name>[allnba_award]</local-name>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias>allnba_award</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[master_table_clean]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AY5826:no:A1:AY5826:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='3Pt%' datatype='real' name='[3pt%]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Allnba Award' datatype='string' name='[allnba_award]' role='dimension' type='nominal' />
      <column caption='Allstarseason' datatype='string' name='[allstarseason]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Assists' datatype='integer' name='[assists]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Assists Per Game' datatype='real' name='[assists_per_game]' role='dimension' type='ordinal' />
      <column caption='Birthcity' datatype='string' name='[birthcity]' role='dimension' type='nominal' />
      <column caption='Birthcountry' datatype='string' name='[birthcountry]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' caption='Birthdate' datatype='integer' name='[birthdate]' role='dimension' type='ordinal' />
      <column caption='Birthstate' datatype='string' name='[birthstate]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Blocks' datatype='integer' name='[blocks]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Blocks Per Game' datatype='real' name='[blocks_per_game]' role='dimension' type='ordinal' />
      <column caption='College' datatype='string' name='[college]' role='dimension' type='nominal' />
      <column caption='Draftround' datatype='string' name='[draftround]' role='dimension' type='nominal' />
      <column caption='Draftselection' datatype='string' name='[draftselection]' role='dimension' type='nominal' />
      <column caption='Draftyear' datatype='string' name='[draftyear]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Drebound' datatype='integer' name='[drebound]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Fg%' datatype='real' name='[fg%]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Fgattempted' datatype='integer' name='[fgattempted]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Fgmade' datatype='integer' name='[fgmade]' role='dimension' type='ordinal' />
      <column caption='First Name' datatype='string' name='[first_name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Fouls Per Game' datatype='real' name='[fouls_per_game]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Ft%' datatype='real' name='[ft%]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Ftattempted' datatype='integer' name='[ftattempted]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Ftmade' datatype='integer' name='[ftmade]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Gp' datatype='integer' name='[gp]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Height Feet' datatype='integer' name='[height_feet]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Height Inches' datatype='real' name='[height_inches]' role='dimension' type='ordinal' />
      <column caption='Highschool' datatype='string' name='[highschool]' role='dimension' type='nominal' />
      <column caption='Hscity' datatype='string' name='[hscity]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Alameda&quot;' value='&quot;Alameda&quot;' />
          <semantic-value key='&quot;Aston&quot;' value='&quot;Aston&quot;' />
          <semantic-value key='&quot;Baton Rouge&quot;' value='&quot;Baton Rouge&quot;' />
          <semantic-value key='&quot;Bethel Park&quot;' value='&quot;Bethel Park&quot;' />
          <semantic-value key='&quot;Brantley&quot;' value='&quot;Brantley&quot;' />
          <semantic-value key='&quot;Bremerton&quot;' value='&quot;Bremerton&quot;' />
          <semantic-value key='&quot;Briarwood&quot;' value='&quot;Briarwood&quot;' />
          <semantic-value key='&quot;Bronx&quot;' value='&quot;Bronx&quot;' />
          <semantic-value key='&quot;Brownsburg&quot;' value='&quot;Brownsburg&quot;' />
          <semantic-value key='&quot;Castle Dale&quot;' value='&quot;Castle Dale&quot;' />
          <semantic-value key='&quot;Chicago&quot;' value='&quot;Chicago&quot;' />
          <semantic-value key='&quot;Cold Spring Harbor&quot;' value='&quot;Cold Spring Harbor&quot;' />
          <semantic-value key='&quot;Corsicana&quot;' value='&quot;Corsicana&quot;' />
          <semantic-value key='&quot;Daytona Beach&quot;' value='&quot;Daytona Beach&quot;' />
          <semantic-value key='&quot;Diamond Bar&quot;' value='&quot;Diamond Bar&quot;' />
          <semantic-value key='&quot;East St. Louis&quot;' value='&quot;East Saint Louis&quot;' />
          <semantic-value key='&quot;El Cerrito&quot;' value='&quot;El Cerrito&quot;' />
          <semantic-value key='&quot;Federal Way&quot;' value='&quot;Federal Way&quot;' />
          <semantic-value key='&quot;Flossmoor&quot;' value='&quot;Flossmoor&quot;' />
          <semantic-value key='&quot;Fort Lauderdale&quot;' value='&quot;Fort Lauderdale&quot;' />
          <semantic-value key='&quot;Gans&quot;' value='&quot;Gans&quot;' />
          <semantic-value key='&quot;Grand Ledge&quot;' value='&quot;Grand Ledge&quot;' />
          <semantic-value key='&quot;Hacienda Heights&quot;' value='&quot;Hacienda Heights&quot;' />
          <semantic-value key='&quot;Huntington Beach&quot;' value='&quot;Huntington Beach&quot;' />
          <semantic-value key='&quot;Huntington Station&quot;' value='&quot;Huntington Station&quot;' />
          <semantic-value key='&quot;Hyattsville&quot;' value='&quot;Hyattsville&quot;' />
          <semantic-value key='&quot;Indianapolis&quot;' value='&quot;Indianapolis&quot;' />
          <semantic-value key='&quot;Iowa Falls&quot;' value='&quot;Iowa Falls&quot;' />
          <semantic-value key='&quot;Jersey City&quot;' value='&quot;Jersey City&quot;' />
          <semantic-value key='&quot;La Mirada&quot;' value='&quot;La Mirada&quot;' />
          <semantic-value key='&quot;Lake Oswego&quot;' value='&quot;Lake Oswego&quot;' />
          <semantic-value key='&quot;Latta&quot;' value='&quot;Latta&quot;' />
          <semantic-value key='&quot;Lenoir&quot;' value='&quot;Lenoir&quot;' />
          <semantic-value key='&quot;Los Angeles&quot;' value='&quot;Los Angeles&quot;' />
          <semantic-value key='&quot;Merritt Island&quot;' value='&quot;Merritt Island&quot;' />
          <semantic-value key='&quot;Metuchen&quot;' value='&quot;Metuchen&quot;' />
          <semantic-value key='&quot;Middle Village&quot;' value='&quot;Middle Village&quot;' />
          <semantic-value key='&quot;Midwest City&quot;' value='&quot;Midwest City&quot;' />
          <semantic-value key='&quot;Milwaukee&quot;' value='&quot;Milwaukee&quot;' />
          <semantic-value key='&quot;Mobile&quot;' value='&quot;Mobile&quot;' />
          <semantic-value key='&quot;Mouth of Wilson&quot;' value='&quot;Mouth of Wilson&quot;' />
          <semantic-value key='&quot;New Hampton / Asheville&quot;' value='&quot;New Hampton&quot;' />
          <semantic-value key='&quot;New Orleans&quot;' value='&quot;New Orleans&quot;' />
          <semantic-value key='&quot;New Orleans / Houston&quot;' value='&quot;New Orleans&quot;' />
          <semantic-value key='&quot;New York&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;New York / Brooklyn&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Niagara Falls&quot;' value='&quot;Niagara Falls&quot;' />
          <semantic-value key='&quot;North Las Vegas&quot;' value='&quot;North Las Vegas&quot;' />
          <semantic-value key='&quot;Oak Lawn&quot;' value='&quot;Oak Lawn&quot;' />
          <semantic-value key='&quot;Oakton&quot;' value='&quot;Oakton&quot;' />
          <semantic-value key='&quot;Ocala&quot;' value='&quot;Ocala&quot;' />
          <semantic-value key='&quot;Old Saybrook&quot;' value='&quot;Old Saybrook&quot;' />
          <semantic-value key='&quot;Olympia Fields&quot;' value='&quot;Olympia Fields&quot;' />
          <semantic-value key='&quot;Owensboro&quot;' value='&quot;Owensboro&quot;' />
          <semantic-value key='&quot;Oxon Hill&quot;' value='&quot;Oxon Hill&quot;' />
          <semantic-value key='&quot;Peekskill&quot;' value='&quot;Peekskill&quot;' />
          <semantic-value key='&quot;Phelan / Little Rock / Dallas&quot;' value='&quot;Phelan&quot;' />
          <semantic-value key='&quot;Philadelphia / Pennsauken&quot;' value='&quot;Philadelphia&quot;' />
          <semantic-value key='&quot;Picayune&quot;' value='&quot;Picayune&quot;' />
          <semantic-value key='&quot;Pompano Beach&quot;' value='&quot;Pompano Beach&quot;' />
          <semantic-value key='&quot;Poplar Bluff&quot;' value='&quot;Poplar Bluff&quot;' />
          <semantic-value key='&quot;Portland / Milwaukee&quot;' value='&quot;Portland&quot;' />
          <semantic-value key='&quot;Racine / Pittsfield&quot;' value='&quot;Racine&quot;' />
          <semantic-value key='&quot;Raleigh / Whitefield / Whitefield&quot;' value='&quot;Raleigh&quot;' />
          <semantic-value key='&quot;Rancho Santa Margarita&quot;' value='&quot;Rancho Santa Margarita&quot;' />
          <semantic-value key='&quot;Reston&quot;' value='&quot;Reston&quot;' />
          <semantic-value key='&quot;Roanoke / Oakton&quot;' value='&quot;Roanoke&quot;' />
          <semantic-value key='&quot;Roberta&quot;' value='&quot;Roberta&quot;' />
          <semantic-value key='&quot;S. Holland&quot;' value='&quot;South Holland&quot;' />
          <semantic-value key='&quot;Santa Monica&quot;' value='&quot;Santa Monica&quot;' />
          <semantic-value key='&quot;Seattle&quot;' value='&quot;Seattle&quot;' />
          <semantic-value key='&quot;Shreveport&quot;' value='&quot;Shreveport&quot;' />
          <semantic-value key='&quot;Silver Spring&quot;' value='&quot;Silver Spring&quot;' />
          <semantic-value key='&quot;Simi Valley&quot;' value='&quot;Simi Valley&quot;' />
          <semantic-value key='&quot;Sioux City&quot;' value='&quot;Sioux City&quot;' />
          <semantic-value key='&quot;Sugarland&quot;' value='&quot;Sugar Land&quot;' />
          <semantic-value key='&quot;Swannanoa&quot;' value='&quot;Swannanoa&quot;' />
          <semantic-value key='&quot;Temple Hills&quot;' value='&quot;Temple Hills&quot;' />
          <semantic-value key='&quot;The Colony&quot;' value='&quot;The Colony&quot;' />
          <semantic-value key='&quot;Toccoa&quot;' value='&quot;Toccoa&quot;' />
          <semantic-value key='&quot;Towson / Mouth of Wilson&quot;' value='&quot;Towson&quot;' />
          <semantic-value key='&quot;Traverse City&quot;' value='&quot;Traverse City&quot;' />
          <semantic-value key='&quot;Troy / Middle Village / New Britain&quot;' value='&quot;Troy&quot;' />
          <semantic-value key='&quot;Tucson&quot;' value='&quot;Tucson&quot;' />
          <semantic-value key='&quot;Tulsa&quot;' value='&quot;Tulsa&quot;' />
          <semantic-value key='&quot;Virginia Beach&quot;' value='&quot;Virginia Beach&quot;' />
          <semantic-value key='&quot;Warrensville Heights&quot;' value='&quot;Warrensville Heights&quot;' />
          <semantic-value key='&quot;West Memphis&quot;' value='&quot;West Memphis&quot;' />
          <semantic-value key='&quot;Winston-Salem&quot;' value='&quot;Winston-Salem&quot;' />
        </semantic-values>
      </column>
      <column caption='Hscountry' datatype='string' name='[hscountry]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Hsstate' datatype='string' name='[hsstate]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Last Name' datatype='string' name='[last_name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Minutes' datatype='integer' name='[minutes]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Minutes Per Game' datatype='real' name='[minutes_per_game]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Orebound' datatype='integer' name='[orebound]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Pf' datatype='integer' name='[pf]' role='dimension' type='ordinal' />
      <column caption='Playerid' datatype='string' name='[playerid]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Points' datatype='integer' name='[points]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Points Per Game' datatype='real' name='[points_per_game]' role='dimension' type='ordinal' />
      <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Rebounds' datatype='integer' name='[rebounds]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Rebounds Per Game' datatype='real' name='[rebounds_per_game]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Steals' datatype='integer' name='[steals]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Steals Per Game' datatype='real' name='[steals_per_game]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Threeattempted' datatype='integer' name='[threeattempted]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Threemade' datatype='integer' name='[threemade]' role='dimension' type='ordinal' />
      <column caption='Tmid' datatype='string' name='[tmid]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Turnovers' datatype='integer' name='[turnovers]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Turnovers Per Game' datatype='real' name='[turnovers_per_game]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Weight' datatype='integer' name='[weight]' role='dimension' type='ordinal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[3pt%]' derivation='Avg' name='[avg:3pt%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[assists_per_game]' derivation='Avg' name='[avg:assists_per_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3pt%]' derivation='Median' name='[med:3pt%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[allnba_award]' derivation='None' name='[none:allnba_award:nk]' pivot='key' type='nominal' />
      <column-instance column='[college]' derivation='None' name='[none:college:nk]' pivot='key' type='nominal' />
      <column-instance column='[draftround]' derivation='None' name='[none:draftround:nk]' pivot='key' type='nominal' />
      <column-instance column='[draftselection]' derivation='None' name='[none:draftselection:nk]' pivot='key' type='nominal' />
      <column-instance column='[tmid]' derivation='None' name='[none:tmid:nk]' pivot='key' type='nominal' />
      <column-instance column='[3pt%]' derivation='Sum' name='[sum:3pt%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[assists_per_game]' derivation='Sum' name='[sum:assists_per_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[threeattempted]' derivation='Sum' name='[sum:threeattempted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[threemade]' derivation='Sum' name='[sum:threemade:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3pt%]' derivation='Var' name='[var:3pt%:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.891332' measure-ordering='alphabetic' measure-percentage='0.108668' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:draftround:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#8074a8'>
              <bucket>&quot;1&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:3pt\%:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt\%:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[med:3pt\%:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[var:3pt\%:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threemade:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:assists_per_game:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:assists_per_game:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:tmid:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#7c7270'>
              <bucket>&quot;LAC&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;WAS&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;LAL&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;POR&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;SAC&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;NYK&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;UTA&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;MIL&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;TOR&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;MIN&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;PHO&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;DET&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;ORL&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;GSW&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;NOH&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;NJN&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;PHI&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:college:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#7c7270'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Clemson&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Louisiana State&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Miami (FL)&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Nevada-Reno&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;San Jose State&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Stanford&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;UNLV&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Brigham Young&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Colorado State&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Jackson State&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Loyola Marymount&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;North Carolina State&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Western Kentucky&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Augsburg (MN)&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Central Michigan&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;East Carolina&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;NE Mississippi CC&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Oklahoma State&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;St. Joseph&apos;s&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;UCLA&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Virginia Union&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Xavier&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Arkansas-Little Rock&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;DePaul&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Missouri-Kansas City&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Ohio University&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Rider&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Southwest Texas State&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Trinity Valley CC (DNP)&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Virginia Commonwealth&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Wright State&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Colgate&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Fresno State&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Iowa State&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Seton Hall&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;TCU&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Arizona State&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;BYU&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Creighton&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Georgia Tech&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Mississippi State&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Notre Dame&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Purdue&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Southern Methodist&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Texas A&amp;M&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Villanova&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Central Arkansas&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Duke&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Hofstra&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Kentucky (dnp)&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;McNeese State&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Navy&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Rutgers&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;St. John&apos;s (NY)&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Virginia Tech&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Marist&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Northeastern&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Southern California&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Vanderbilt&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Wichita State&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;George Washington&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;IUPUI&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Loyola (IL)&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Michigan State&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Pepperdine&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;South Alabama&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Temple&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;UTEP&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Western Carolina&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Ball State&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Eastern Washington&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;LeMoyne&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Memphis State&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Old Dominion&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;San Diego St.&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;UNC - Charlotte&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Wake Forest&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Xavier (OH)&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Boston College&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Cleveland State&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Florida State&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Louisiana Tech&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Miami (OH)&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Oregon State&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;USC&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Washington State&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Cal. State-Santa Barbara&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Gonzaga&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Kansas State&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Ohio State&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Southern Mississippi&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Texas Tech&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Wisconsin-Stevens Point&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:allnba_award:nk]' palette='winter_10_0' type='palette'>
            <map to='#90728f'>
              <bucket>&quot;All-NBA First Team&quot;</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>&quot;All-NBA Third Team&quot;</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>&quot;All-NBA Second Team&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:draftselection:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#7c7270'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;23&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;28&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;18&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;26&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;12&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;24&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;22&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;29&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='allnba_award_draftpick' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Allnba Award' />
        <param name='target' value='allnba_award_draftpick' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='3pt%_test'>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column aggregation='Sum' caption='3Pt%' datatype='real' name='[3pt%]' role='dimension' type='ordinal' />
            <column-instance column='[3pt%]' derivation='Avg' name='[avg:3pt%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tmid]' derivation='None' name='[none:tmid:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Tmid' datatype='string' name='[tmid]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]' direction='DESC' using='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' />
          <filter class='quantitative' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</rows>
        <cols>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='3pts_peryear'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='16'>3 Pointers Attempted Per Year with 3pt % Labels (All Players)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column aggregation='Sum' caption='3Pt%' datatype='real' name='[3pt%]' role='dimension' type='ordinal' />
            <column-instance column='[3pt%]' derivation='Avg' name='[avg:3pt%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[threeattempted]' derivation='None' name='[none:threeattempted:ok]' pivot='key' type='ordinal' />
            <column-instance column='[threemade]' derivation='None' name='[none:threemade:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[threeattempted]' derivation='Sum' name='[sum:threeattempted:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Threeattempted' datatype='integer' name='[threeattempted]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Threemade' datatype='integer' name='[threemade]' role='dimension' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threeattempted:ok]'>
            <groupfilter from='0' function='range' level='[none:threeattempted:ok]' to='678' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threemade:ok]'>
            <groupfilter from='0' function='range' level='[none:threemade:ok]' to='269' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threeattempted:ok]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threemade:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]' value='bold' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_0' value='2' />
            <format attr='stroke-color' id='annotation_0' value='#b07aa1' />
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='body-type' id='annotation_0' value='none' />
            <format attr='stroke-size' id='annotation_1' value='2' />
            <format attr='stroke-color' id='annotation_1' value='#b07aa1' />
            <format attr='fill-color' id='annotation_1' value='#00000000' />
            <format attr='body-type' id='annotation_1' value='none' />
            <format attr='line-visibility' id='annotation_1' value='on' />
            <format attr='line-pattern-only' id='annotation_1' value='dashed' />
            <format attr='line-visibility' id='annotation_0' value='on' />
            <format attr='line-pattern-only' id='annotation_0' value='dashed' />
            <format attr='body-type' id='annotation_2' value='none' />
            <format attr='fill-color' id='annotation_2' value='#00000000' />
            <format attr='stroke-color' id='annotation_2' value='#b07aa1' />
            <format attr='line-visibility' id='annotation_2' value='on' />
            <format attr='line-pattern-only' id='annotation_2' value='dashed' />
            <format attr='stroke-size' id='annotation_2' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' />
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</rows>
        <cols>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='216'>
            <formatted-text>
              <run bold='true' fontcolor='#6d405f' fontname='Arial' fontsize='12'>3pt Line Moved In</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.26690328504477462</value>
                    <value>1994</value>
                    <value>28186</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-157' y='27' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='222'>
            <formatted-text>
              <run bold='true' fontcolor='#6d405f' fontname='Arial' fontsize='12'>3pt Line Moved Back</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.22813209486301037</value>
                    <value>1997</value>
                    <value>23660</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='153' y='48' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='322'>
            <formatted-text>
              <run bold='true' fontcolor='#6d405f' fontname='Arial' fontsize='12'>Lockout Shortened Season</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.2569967836979612</value>
                    <value>2011</value>
                    <value>18585</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-189' y='43' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='3s_att_vs_3%'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='18'>3 Pointers Attempted vs 3 Point % in 2011</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column aggregation='Sum' caption='3Pt%' datatype='real' name='[3pt%]' role='dimension' type='ordinal' />
            <column-instance column='[3pt%]' derivation='Avg' name='[avg:3pt%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tmid]' derivation='None' name='[none:tmid:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[threeattempted]' derivation='Sum' name='[sum:threeattempted:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Threeattempted' datatype='integer' name='[threeattempted]' role='dimension' type='ordinal' />
            <column caption='Tmid' datatype='string' name='[tmid]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]' direction='DESC' using='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' />
          <filter class='quantitative' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='#00000000' />
            <format attr='title' class='0' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' scope='cols' value='3 Pointers Attempted' />
            <format attr='subtitle' class='0' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' scope='rows' value='AVG 3Pt%' />
            <format attr='subtitle' class='0' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]' value='42' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='Arial' />
            <format attr='font-size' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='10' />
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]' value='#000000' />
            <format attr='font-family' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' value='Arial' />
            <format attr='font-size' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' value='10' />
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_1' value='none' />
            <format attr='fill-color' id='annotation_1' value='#00000000' />
            <format attr='stroke-size' id='annotation_1' value='2' />
            <format attr='line-visibility' id='annotation_1' value='on' />
            <format attr='line-pattern-only' id='annotation_1' value='dashed' />
            <format attr='line-end' id='annotation_1' value='arrow' />
            <format attr='line-end-size' id='annotation_1' value='large' />
            <format attr='stroke-color' id='annotation_1' value='#6d405f' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]' />
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run>&lt;[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
                <format attr='color' value='#6d405f' />
                <format attr='font-family' value='Arial' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1224' />
                <format attr='maxwidth' value='1224' />
                <format attr='minheight' value='678' />
                <format attr='maxheight' value='678' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1091' />
                <format attr='maxwidth' value='1091' />
                <format attr='minheight' value='678' />
                <format attr='maxheight' value='678' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1224' />
                <format attr='maxwidth' value='1224' />
                <format attr='minheight' value='678' />
                <format attr='maxheight' value='678' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1224' />
                <format attr='maxwidth' value='1224' />
                <format attr='minheight' value='678' />
                <format attr='maxheight' value='678' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</rows>
        <cols>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='302'>
            <formatted-text>
              <run bold='true' fontcolor='#6d405f' fontname='Arial' fontsize='12'>We&apos;re Here! 19th in Attempts!</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[avg:3pt%:qk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]</field>
                      <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[sum:threeattempted:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.21699677795568206</value>
                    <value>&quot;SAC&quot;</value>
                    <value>550</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='44' y='82' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='SAC_players_test'>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column aggregation='Sum' caption='3Pt%' datatype='real' name='[3pt%]' role='dimension' type='ordinal' />
            <column caption='First Name' datatype='string' name='[first_name]' role='dimension' type='nominal' />
            <column caption='Last Name' datatype='string' name='[last_name]' role='dimension' type='nominal' />
            <column-instance column='[3pt%]' derivation='None' name='[none:3pt%:ok]' pivot='key' type='ordinal' />
            <column-instance column='[first_name]' derivation='None' name='[none:first_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[last_name]' derivation='None' name='[none:last_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[threeattempted]' derivation='None' name='[none:threeattempted:ok]' pivot='key' type='ordinal' />
            <column-instance column='[tmid]' derivation='None' name='[none:tmid:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Threeattempted' datatype='integer' name='[threeattempted]' role='dimension' type='ordinal' />
            <column caption='Tmid' datatype='string' name='[tmid]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]'>
            <groupfilter function='member' level='[none:tmid:nk]' member='&quot;SAC&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.14oa8eb1042dhv106fnc61b8jinn].[none:first_name:nk] / ([federated.14oa8eb1042dhv106fnc61b8jinn].[none:last_name:nk] / ([federated.14oa8eb1042dhv106fnc61b8jinn].[none:pos:nk] / ([federated.14oa8eb1042dhv106fnc61b8jinn].[none:threeattempted:ok] / [federated.14oa8eb1042dhv106fnc61b8jinn].[none:3pt%:ok]))))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='allnba_award_draftpick'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='16'># All NBA Award by 1st Rd Draft Pick (Since 1985)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column caption='Allnba Award' datatype='string' name='[allnba_award]' role='dimension' type='nominal' />
            <column-instance column='[allnba_award]' derivation='Count' name='[cnt:allnba_award:qk]' pivot='key' type='quantitative' />
            <column caption='Draftround' datatype='string' name='[draftround]' role='dimension' type='nominal' />
            <column caption='Draftselection' datatype='string' name='[draftselection]' role='dimension' type='nominal' />
            <column-instance column='[allnba_award]' derivation='None' name='[none:allnba_award:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftround]' derivation='None' name='[none:draftround:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftselection]' derivation='None' name='[none:draftselection:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allnba_award:nk]'>
            <groupfilter from='&quot;All-NBA First Team&quot;' function='range' level='[none:allnba_award:nk]' to='&quot;All-NBA Third Team&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]'>
            <groupfilter function='member' level='[none:draftround:nk]' member='&quot;1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allnba_award:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='54' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='#000000' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allnba_award:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allnba_award:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allnba_award:nk]' />
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allnba_award:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allnba_award:qk]</rows>
        <cols>([federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk] / [federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='allstarseason_draftpick'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='16'>Number of Allstar Seasons Per 1st Round Draft Pick (Since 1985)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column caption='Allstarseason' datatype='string' name='[allstarseason]' role='dimension' type='nominal' />
            <column-instance column='[allstarseason]' derivation='Count' name='[cnt:allstarseason:qk]' pivot='key' type='quantitative' />
            <column caption='Draftround' datatype='string' name='[draftround]' role='dimension' type='nominal' />
            <column caption='Draftselection' datatype='string' name='[draftselection]' role='dimension' type='nominal' />
            <column-instance column='[allstarseason]' derivation='None' name='[none:allstarseason:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftround]' derivation='None' name='[none:draftround:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftselection]' derivation='None' name='[none:draftselection:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allstarseason:nk]'>
            <groupfilter from='&quot;1985&quot;' function='range' level='[none:allstarseason:nk]' to='&quot;2009&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]'>
            <groupfilter function='member' level='[none:draftround:nk]' member='&quot;1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allstarseason:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='36' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allstarseason:qk]' value='#5b3f53' />
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allstarseason:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allstarseason:qk]' value='bold' />
            <format attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allstarseason:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' />
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allstarseason:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:allstarseason:qk]</rows>
        <cols>([federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk] / [federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='college_draftpick'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='16'>Which Colleges Bring in the Most 1st Rounders?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column-instance column='[college]' derivation='Count' name='[cnt:college:qk]' pivot='key' type='quantitative' />
            <column caption='College' datatype='string' name='[college]' role='dimension' type='nominal' />
            <column caption='Draftround' datatype='string' name='[draftround]' role='dimension' type='nominal' />
            <column caption='Draftselection' datatype='string' name='[draftselection]' role='dimension' type='nominal' />
            <column-instance column='[college]' derivation='None' name='[none:college:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftround]' derivation='None' name='[none:draftround:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftselection]' derivation='None' name='[none:draftselection:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:college:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Alabama&quot;' />
              <groupfilter from='&quot;Arizona&quot;' function='range' level='[none:college:nk]' to='&quot;Augsburg (MN)&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Ball State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Baylor&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Boston College&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Bowling Green&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Bradley&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Brigham Young&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Butler&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;BYU&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Cal. State-Santa Barbara&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Central Arkansas&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Central Michigan&quot;' />
              <groupfilter from='&quot;Cincinnati&quot;' function='range' level='[none:college:nk]' to='&quot;Cleveland State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Colgate&quot;' />
              <groupfilter from='&quot;Colorado&quot;' function='range' level='[none:college:nk]' to='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Creighton&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Davidson&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;DePaul&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Duke&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;East Carolina&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Eastern Washington&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Florida State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Fresno State&quot;' />
              <groupfilter from='&quot;George Washington&quot;' function='range' level='[none:college:nk]' to='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Georgia Tech&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Gonzaga&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Hartford&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Hofstra&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Indiana&quot;' />
              <groupfilter from='&quot;Iowa&quot;' function='range' level='[none:college:nk]' to='&quot;Kentucky (dnp)&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;LaSalle&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;LeMoyne&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Louisiana State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Louisiana Tech&quot;' />
              <groupfilter from='&quot;Louisville&quot;' function='range' level='[none:college:nk]' to='&quot;Loyola Marymount&quot;' />
              <groupfilter from='&quot;Marist&quot;' function='range' level='[none:college:nk]' to='&quot;Memphis State&quot;' />
              <groupfilter from='&quot;Miami (FL)&quot;' function='range' level='[none:college:nk]' to='&quot;Michigan State&quot;' />
              <groupfilter from='&quot;Minnesota&quot;' function='range' level='[none:college:nk]' to='&quot;Missouri-Kansas City&quot;' />
              <groupfilter from='&quot;Navy&quot;' function='range' level='[none:college:nk]' to='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;New Orleans&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;North Carolina State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Northeastern&quot;' />
              <groupfilter from='&quot;Notre Dame&quot;' function='range' level='[none:college:nk]' to='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Oklahoma State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Old Dominion&quot;' />
              <groupfilter from='&quot;Oregon&quot;' function='range' level='[none:college:nk]' to='&quot;Pacific&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Pepperdine&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Pittsburgh&quot;' />
              <groupfilter from='&quot;Providence&quot;' function='range' level='[none:college:nk]' to='&quot;Rhode Island&quot;' />
              <groupfilter from='&quot;Rider&quot;' function='range' level='[none:college:nk]' to='&quot;San Diego St.&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;San Jose State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Santa Clara&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Seton Hall&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;South Alabama&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Southern California&quot;' />
              <groupfilter from='&quot;Southern Methodist&quot;' function='range' level='[none:college:nk]' to='&quot;Southwest Texas State&quot;' />
              <groupfilter from='&quot;St. John&apos;s (NY)&quot;' function='range' level='[none:college:nk]' to='&quot;St. Louis&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Stanford&quot;' />
              <groupfilter from='&quot;Syracuse&quot;' function='range' level='[none:college:nk]' to='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Texas A&amp;M&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Texas Tech&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Trinity Valley CC (DNP)&quot;' />
              <groupfilter from='&quot;Tulsa&quot;' function='range' level='[none:college:nk]' to='&quot;UNC - Charlotte&quot;' />
              <groupfilter from='&quot;UNLV&quot;' function='range' level='[none:college:nk]' to='&quot;Utah&quot;' />
              <groupfilter from='&quot;UTEP&quot;' function='range' level='[none:college:nk]' to='&quot;Virginia Commonwealth&quot;' />
              <groupfilter from='&quot;Virginia Tech&quot;' function='range' level='[none:college:nk]' to='&quot;Washington State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter from='&quot;Western Carolina&quot;' function='range' level='[none:college:nk]' to='&quot;Wichita State&quot;' />
              <groupfilter function='member' level='[none:college:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter from='&quot;Wisconsin-Stevens Point&quot;' function='range' level='[none:college:nk]' to='&quot;Xavier (OH)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]'>
            <groupfilter function='member' level='[none:draftround:nk]' member='&quot;1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:draftselection:nk]' to='&quot;9&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:college:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:college:qk]' />
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:college:qk]' />
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:college:nk]' />
              <color column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:college:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='draftpick_birthstate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Verdana' fontsize='18'>Lottery Pick By Birthstate Since 1985 (US Only)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_table_clean (Final Project NBA)' name='federated.14oa8eb1042dhv106fnc61b8jinn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14oa8eb1042dhv106fnc61b8jinn'>
            <column caption='Birthstate' datatype='string' name='[birthstate]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[birthstate]' derivation='Count' name='[cnt:birthstate:qk]' pivot='key' type='quantitative' />
            <column caption='Draftround' datatype='string' name='[draftround]' role='dimension' type='nominal' />
            <column caption='Draftselection' datatype='string' name='[draftselection]' role='dimension' type='nominal' />
            <column caption='Hscity' datatype='string' name='[hscity]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Alameda&quot;' value='&quot;Alameda&quot;' />
                <semantic-value key='&quot;Aston&quot;' value='&quot;Aston&quot;' />
                <semantic-value key='&quot;Baton Rouge&quot;' value='&quot;Baton Rouge&quot;' />
                <semantic-value key='&quot;Bethel Park&quot;' value='&quot;Bethel Park&quot;' />
                <semantic-value key='&quot;Brantley&quot;' value='&quot;Brantley&quot;' />
                <semantic-value key='&quot;Bremerton&quot;' value='&quot;Bremerton&quot;' />
                <semantic-value key='&quot;Briarwood&quot;' value='&quot;Briarwood&quot;' />
                <semantic-value key='&quot;Bronx&quot;' value='&quot;Bronx&quot;' />
                <semantic-value key='&quot;Brownsburg&quot;' value='&quot;Brownsburg&quot;' />
                <semantic-value key='&quot;Castle Dale&quot;' value='&quot;Castle Dale&quot;' />
                <semantic-value key='&quot;Chicago&quot;' value='&quot;Chicago&quot;' />
                <semantic-value key='&quot;Cold Spring Harbor&quot;' value='&quot;Cold Spring Harbor&quot;' />
                <semantic-value key='&quot;Corsicana&quot;' value='&quot;Corsicana&quot;' />
                <semantic-value key='&quot;Daytona Beach&quot;' value='&quot;Daytona Beach&quot;' />
                <semantic-value key='&quot;Diamond Bar&quot;' value='&quot;Diamond Bar&quot;' />
                <semantic-value key='&quot;East St. Louis&quot;' value='&quot;East Saint Louis&quot;' />
                <semantic-value key='&quot;El Cerrito&quot;' value='&quot;El Cerrito&quot;' />
                <semantic-value key='&quot;Federal Way&quot;' value='&quot;Federal Way&quot;' />
                <semantic-value key='&quot;Flossmoor&quot;' value='&quot;Flossmoor&quot;' />
                <semantic-value key='&quot;Fort Lauderdale&quot;' value='&quot;Fort Lauderdale&quot;' />
                <semantic-value key='&quot;Gans&quot;' value='&quot;Gans&quot;' />
                <semantic-value key='&quot;Grand Ledge&quot;' value='&quot;Grand Ledge&quot;' />
                <semantic-value key='&quot;Hacienda Heights&quot;' value='&quot;Hacienda Heights&quot;' />
                <semantic-value key='&quot;Huntington Beach&quot;' value='&quot;Huntington Beach&quot;' />
                <semantic-value key='&quot;Huntington Station&quot;' value='&quot;Huntington Station&quot;' />
                <semantic-value key='&quot;Hyattsville&quot;' value='&quot;Hyattsville&quot;' />
                <semantic-value key='&quot;Indianapolis&quot;' value='&quot;Indianapolis&quot;' />
                <semantic-value key='&quot;Iowa Falls&quot;' value='&quot;Iowa Falls&quot;' />
                <semantic-value key='&quot;Jersey City&quot;' value='&quot;Jersey City&quot;' />
                <semantic-value key='&quot;La Mirada&quot;' value='&quot;La Mirada&quot;' />
                <semantic-value key='&quot;Lake Oswego&quot;' value='&quot;Lake Oswego&quot;' />
                <semantic-value key='&quot;Latta&quot;' value='&quot;Latta&quot;' />
                <semantic-value key='&quot;Lenoir&quot;' value='&quot;Lenoir&quot;' />
                <semantic-value key='&quot;Los Angeles&quot;' value='&quot;Los Angeles&quot;' />
                <semantic-value key='&quot;Merritt Island&quot;' value='&quot;Merritt Island&quot;' />
                <semantic-value key='&quot;Metuchen&quot;' value='&quot;Metuchen&quot;' />
                <semantic-value key='&quot;Middle Village&quot;' value='&quot;Middle Village&quot;' />
                <semantic-value key='&quot;Midwest City&quot;' value='&quot;Midwest City&quot;' />
                <semantic-value key='&quot;Milwaukee&quot;' value='&quot;Milwaukee&quot;' />
                <semantic-value key='&quot;Mobile&quot;' value='&quot;Mobile&quot;' />
                <semantic-value key='&quot;Mouth of Wilson&quot;' value='&quot;Mouth of Wilson&quot;' />
                <semantic-value key='&quot;New Hampton / Asheville&quot;' value='&quot;New Hampton&quot;' />
                <semantic-value key='&quot;New Orleans&quot;' value='&quot;New Orleans&quot;' />
                <semantic-value key='&quot;New Orleans / Houston&quot;' value='&quot;New Orleans&quot;' />
                <semantic-value key='&quot;New York&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;New York / Brooklyn&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Niagara Falls&quot;' value='&quot;Niagara Falls&quot;' />
                <semantic-value key='&quot;North Las Vegas&quot;' value='&quot;North Las Vegas&quot;' />
                <semantic-value key='&quot;Oak Lawn&quot;' value='&quot;Oak Lawn&quot;' />
                <semantic-value key='&quot;Oakton&quot;' value='&quot;Oakton&quot;' />
                <semantic-value key='&quot;Ocala&quot;' value='&quot;Ocala&quot;' />
                <semantic-value key='&quot;Old Saybrook&quot;' value='&quot;Old Saybrook&quot;' />
                <semantic-value key='&quot;Olympia Fields&quot;' value='&quot;Olympia Fields&quot;' />
                <semantic-value key='&quot;Owensboro&quot;' value='&quot;Owensboro&quot;' />
                <semantic-value key='&quot;Oxon Hill&quot;' value='&quot;Oxon Hill&quot;' />
                <semantic-value key='&quot;Peekskill&quot;' value='&quot;Peekskill&quot;' />
                <semantic-value key='&quot;Phelan / Little Rock / Dallas&quot;' value='&quot;Phelan&quot;' />
                <semantic-value key='&quot;Philadelphia / Pennsauken&quot;' value='&quot;Philadelphia&quot;' />
                <semantic-value key='&quot;Picayune&quot;' value='&quot;Picayune&quot;' />
                <semantic-value key='&quot;Pompano Beach&quot;' value='&quot;Pompano Beach&quot;' />
                <semantic-value key='&quot;Poplar Bluff&quot;' value='&quot;Poplar Bluff&quot;' />
                <semantic-value key='&quot;Portland / Milwaukee&quot;' value='&quot;Portland&quot;' />
                <semantic-value key='&quot;Racine / Pittsfield&quot;' value='&quot;Racine&quot;' />
                <semantic-value key='&quot;Raleigh / Whitefield / Whitefield&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Rancho Santa Margarita&quot;' value='&quot;Rancho Santa Margarita&quot;' />
                <semantic-value key='&quot;Reston&quot;' value='&quot;Reston&quot;' />
                <semantic-value key='&quot;Roanoke / Oakton&quot;' value='&quot;Roanoke&quot;' />
                <semantic-value key='&quot;Roberta&quot;' value='&quot;Roberta&quot;' />
                <semantic-value key='&quot;S. Holland&quot;' value='&quot;South Holland&quot;' />
                <semantic-value key='&quot;Santa Monica&quot;' value='&quot;Santa Monica&quot;' />
                <semantic-value key='&quot;Seattle&quot;' value='&quot;Seattle&quot;' />
                <semantic-value key='&quot;Shreveport&quot;' value='&quot;Shreveport&quot;' />
                <semantic-value key='&quot;Silver Spring&quot;' value='&quot;Silver Spring&quot;' />
                <semantic-value key='&quot;Simi Valley&quot;' value='&quot;Simi Valley&quot;' />
                <semantic-value key='&quot;Sioux City&quot;' value='&quot;Sioux City&quot;' />
                <semantic-value key='&quot;Sugarland&quot;' value='&quot;Sugar Land&quot;' />
                <semantic-value key='&quot;Swannanoa&quot;' value='&quot;Swannanoa&quot;' />
                <semantic-value key='&quot;Temple Hills&quot;' value='&quot;Temple Hills&quot;' />
                <semantic-value key='&quot;The Colony&quot;' value='&quot;The Colony&quot;' />
                <semantic-value key='&quot;Toccoa&quot;' value='&quot;Toccoa&quot;' />
                <semantic-value key='&quot;Towson / Mouth of Wilson&quot;' value='&quot;Towson&quot;' />
                <semantic-value key='&quot;Traverse City&quot;' value='&quot;Traverse City&quot;' />
                <semantic-value key='&quot;Troy / Middle Village / New Britain&quot;' value='&quot;Troy&quot;' />
                <semantic-value key='&quot;Tucson&quot;' value='&quot;Tucson&quot;' />
                <semantic-value key='&quot;Tulsa&quot;' value='&quot;Tulsa&quot;' />
                <semantic-value key='&quot;Virginia Beach&quot;' value='&quot;Virginia Beach&quot;' />
                <semantic-value key='&quot;Warrensville Heights&quot;' value='&quot;Warrensville Heights&quot;' />
                <semantic-value key='&quot;West Memphis&quot;' value='&quot;West Memphis&quot;' />
                <semantic-value key='&quot;Winston-Salem&quot;' value='&quot;Winston-Salem&quot;' />
              </semantic-values>
            </column>
            <column caption='Hscountry' datatype='string' name='[hscountry]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[birthstate]' derivation='None' name='[none:birthstate:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftround]' derivation='None' name='[none:draftround:nk]' pivot='key' type='nominal' />
            <column-instance column='[draftselection]' derivation='None' name='[none:draftselection:nk]' pivot='key' type='nominal' />
            <column-instance column='[hscity]' derivation='None' name='[none:hscity:nk]' pivot='key' type='nominal' />
            <column-instance column='[hscountry]' derivation='None' name='[none:hscountry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:birthstate:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AL&quot;' function='range' level='[none:birthstate:nk]' to='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;GA&quot;' />
              <groupfilter from='&quot;IA&quot;' function='range' level='[none:birthstate:nk]' to='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;MD&quot;' />
              <groupfilter from='&quot;MI&quot;' function='range' level='[none:birthstate:nk]' to='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;NC&quot;' />
              <groupfilter from='&quot;NJ&quot;' function='range' level='[none:birthstate:nk]' to='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:birthstate:nk]' member='&quot;TX&quot;' />
              <groupfilter from='&quot;VA&quot;' function='range' level='[none:birthstate:nk]' to='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]'>
            <groupfilter function='member' level='[none:draftround:nk]' member='&quot;1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;10&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;11&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;12&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;13&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;14&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;6&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[none:draftselection:nk]' member='&quot;9&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:hscity:nk]'>
            <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:hscity:nk]' to='&quot;Zanesville&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:hscountry:nk]'>
            <groupfilter function='member' level='[none:hscountry:nk]' member='&quot;USA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:hscountry:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:hscity:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]</column>
            <column>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:birthstate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:birthstate:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:birthstate:qk]' />
              <lod column='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:birthstate:nk]' />
              <color column='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:birthstate:qk]' />
              <geometry column='[federated.14oa8eb1042dhv106fnc61b8jinn].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='231' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14oa8eb1042dhv106fnc61b8jinn].[Latitude (generated)]</rows>
        <cols>[federated.14oa8eb1042dhv106fnc61b8jinn].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' maximized='true' name='allstarseason_draftpick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allnba_award:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allstarseason:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='allnba_award_draftpick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allnba_award:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:allstarseason:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='college_draftpick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:college:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:college:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:gp:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:height_feet:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:height_inches:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SAC_players_test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:3pt%:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:assists_per_game:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:blocks_per_game:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:fg%:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:first_name:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:ft%:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:last_name:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:minutes_per_game:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:playerid:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:points_per_game:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:pos:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:rebounds_per_game:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:steals_per_game:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threeattempted:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='draftpick_birthstate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:birthstate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[cnt:birthstate:qk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:birthstate:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftround:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:draftselection:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:hscity:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:hscountry:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='3pts_peryear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[:Measure Names]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:3pt%:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threeattempted:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threemade:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3s_att_vs_3%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:3pt%:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threeattempted:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:threemade:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3pt%_test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:3pt%:ok]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:tmid:nk]</field>
            <field>[federated.14oa8eb1042dhv106fnc61b8jinn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='3pt%_test' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3pts_peryear' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd3Rd13Wnv/sagIfeAaKDBAEQBHtvoiTaKpYlW8WyLdmK7UnGaWPPTFZm
      ZWUyM57ilfEkziTOxOMkEyeyrWZJli2JKpTYO0GQBEii9/ZQX+/33jN/gA0UKAIgHto731pc
      BMFz797nvfO7p+2zryKEEEgkUYphvh2QSOaTWRWApmnTvkZV1dl04RPouo6u6xG1Eek6LBUb
      mqYR6QHHdOsgewBJVCMFIIlqpAAkUY0UgCSqkQKQRDVSAJKoRgpAEtVIAUiiGikASVQjBSCJ
      aqQAJFGNFIAkqpECkEQ1UgCSqEYKQBLVmKZTuKvlKo6wmRXLUjhTW095VTUmoxE16CcvLy9S
      PkokEWNaPUBK5jKunD3MwQPv48RKktHP2++8yelLrZHyTyKJKNPqAYLeMfwhhc88/TTawBV+
      c/AcLVfreaR6z42TV9M98aPrekRPIl33J5KnwiJdh6ViYybtYyY2plOHaQmgs7OL3KJiPLZu
      mluH2L1jK1WrV+MZG0ExrMQgBEajcVoOq6qKyTQtN6bF9YZvMERuuhPpOiwVG5qmYTAYUBQl
      YjamWwdlNrNCaJomBSBt3JGFKAC5CiSJaqQAJFGNFIAkqpECkEQ1UgCSqEYKQBLVSAFIohop
      AElUIwUgmTOErtHW0oTHH8LjHKW1oxshACEY7OumvbsfXQ3R1d2HEBpOpyfiPkV2a1EiuQVb
      TwcYjfzLiy9h1r2szEtlNPwgW1dk4AupnNz/KkczV2BVg3SX5JNTWElyckJEfZI9gGTOyMzJ
      5tjHB9i+5z7MiqB7yIHVYgCDEZMWYMwP6yrKMMSa6Who4ugH79A75rvrfYUQBNx+umvbuPDL
      E3jH3FP2SfYAkjnj+Nu/JBSfg4kwMbFxxMQY8Tv6OVkzjO7pJzMtiZSCMnJGbaQU53GqtpE7
      BaoJIQg4fdiaehlq7kPXBVkrcknJS2fgajcrdlVNyScZDDcLLIVAtbmwca/BcEIX+OwebI09
      DLX0YzAayC7PJ2tlHnHJVhRFwef0cvHNk2z/rX1TsiN7AMmCReiCoMdPKBDCdrWb4TYb5jgL
      uZUFbHh6J5b42E80ckt8DKYYMz67h/i0xLvakAKQLFj6L3dS89oxllUVsWx1ESXbKjDHWu56
      XU5FAQMNPazYuequZeUkWLIg8Y65aTvZyOYv38emZ/eQV108pcYPkF2ex1BT35TKyh5AsuDw
      O73U/vI4ax/fSvKytGlfb7HGYIox4R1z33UYJHsAyYIi6PFT8+oxqh7ZRFJu6ozuoSgKOZWF
      2Bp67lp2Wj1AXc0pzly4QtXKIrr6hihcvgLbyCghb4ivfOkLM3JWIrlOyB+k5pWjVOxbS2pB
      xj0dncwuz6Pm1WMsv8s8YFoCyMnJwu05R1unjcc+dz9vvXuYC2cP8bXvfl9mhVjkGRvmwsan
      tQ81GKb2teOU7KgktTBzRu+cvm5DVVWMMSaMZgPuUSdxyfF3LD+tfYCzJw7R2NxN6fI8evoG
      KS0rxzY6hsfu5qtffgpd7gNIG5/CnfYB1JDK+deOkb+2hLzq4nuycWsdus+3Eg6GWb6j8o7l
      5UbYLLAUGudMbKjhIE63n7TUZEIBHwFVkJSYgB4OMuZwoRjNJMXHoOoGLCYFDQMWk3GCALSw
      yoU3TpJVtozCjStmtQ4hX5Bzrxxhxzc+c8fhlFwFksyYK3UXGOtrI5Cykq6Genbft4fKihWo
      4SD9vV384s332bqmFE/ITHFWIut3PYDFdPMBqasadb85Q1pRFoUb7r3x3445zoLRZCTg8t1x
      GCRXgSQzpqSogLr2YfLj3IwFFM6dPkUgrBNjTcISGGLvI0+Sl51NrCFEa98w7793AP3aeEPX
      der3nyMhI5mSbeUQgVRBiqKQW1XEwJXuO5aRApDMEMEP//x/UlZVTUp2KWmxGl6Pm0tnTzHo
      9PLRmRY+s20VW3ftIT4pjezkGFxOJ+Ph/4Kr79discayYk9VRBNl5VYWYGvsuePkW84BZoGF
      OD6PvA3B3VqOoigTGp6u6xgUA40fX0RTNaoe3jjrjX+yOpx+8WPWPrFt0mGQ7AEkM0RBUT79
      DzDh32owTNPhOkL+EKse2hDRJ/+t5K4qZODq5MMgKQDJnHHprdPYGnqo/tymiPbIt5NTUYCt
      qW/SYZAUgCRiCCFw9I0ScPvH/60LVj+6GcM0h8n3SkxCLAajgYDzk6fLpAAks44QAjWk0ny4
      HufAGOY4C1pYJej1k1aYOS8+5VaOh0jfjhSAZFYJ+YK0HruCraGbFbtWUbSpDKPJyEjHIKmF
      mSiGuRn33052eT6DzZ8cBsmNMMmsoIVVbI29GExG8qqLsaZOzOYw2NhLbnXRPHkHsYlxKAYF
      v9OHNeXmapDsARYAXedreOl//T8uXeic8Pv+K3W0t48A0HL0KBdquwBw9nbReOXTQ31PvvIa
      v/jxbwiM9vGX3/4eg/bwlP058JOfYfePLx+/9aMXCX1KXJrQBa5BOw0HLhKflkhORf4nGv/1
      uUBKXvqUfYgEORX5DDZO/NxkD7AASCtZzpq1o3R2DDBw+iAhUzyxWYW464+h5m2gpHQffpcL
      nzkIQMDlYGRA8Mq77xITG0vxzj1oA810to+w7anHyM9LwT08Sl9bkKs1VrxeNyG/j1+//DYh
      3cj6HRXYHEbMji5Sy8q5fOQs8bmFbNyQy4G3TjFwpZl1z4/7NjowROvxY9TX9aKpCs9858uY
      DTcbde/Fdoq3llP1yJ3X9J0DdhKzkjEY5/d5m1Oez8VfnaJ4a/kNX2UPsABITEslKSsTl22Q
      sf4Rdj33NG2nT5FbnM/KDas+ESUQ8niwj7oZdQTY89l1NF9q4sSvj2FQNDoab653FxSmcfjD
      KxSvyKb/0kXILGV1eSrdthBtp05z9eoAY411jDrD2BpbqT10isoH95GXlzLBns/hILd6Pbh7
      8QbGfyd0gWfERdWjm0jMTP7UNX1bYw85lQWz9XHNmNgkKxiUCatBUgALgHO/+jUnDtaRlJGG
      roU48tKvSMwtIj45gbaLN3PjHPmXl/g/f/QXdPc6AFAUAwoKYKaosgDFHEPB8uvvazZSurYU
      zFaS42PIWF7KWMMlzp/toGxtBXnpCmkrqyhatQKTopOzspSy1Su4sP8DertHP+Hj7ZNXg9FA
      wbrSu67nCyEYaRsgc0XuPX5Ks0NORT62W4ZBMhRiFrjXOgiho4ZUTBYzL//nv+ShP/4OqVYj
      CqCqOiaLiXAwCGK8ERqvRVQKoWM0GtF0gcEAmqpjMptQFAUtrKIYDeiajoJAMZkQmoYQYDRf
      +xkFg+F6WSNC6AhdR0HBeO0+ajiMwWBAoCB0DaPJzHQ2cP0OL3Vvn2HL8/ePh0LM80vy/E4f
      l359iq1fewBFUeQcYCGgKAbMMeMZD57+kz/AHHuzkZkt48I1GI2TfLHjQjBd07bBcvPhYzSP
      l50g/FuuV255UJksZmBcbGbLxMwLJrP5FnPTf4jYmnrJrsifs7CHuxGbFAfKzdUgOQRaYFji
      Yqf1hF3ICCEYau4je2Xe3QvPEYqikFOez2BTLyDnAJIIogbCqCGVuKQ7n8mdD7LL8xhs6kUI
      Mb0hUH3NKTpsDlaV5HCla4j11ZUMOTz4nXZ279oZKX8li5Th9gEySnMictjlXohNsgIKAZdv
      egJYWbWac7UvMZBoJBTwE/C5eO3Ff+Dx578rs0Is8owNkbBha+ylaEvZjXvOpH1Ml6nWIbMs
      l4GGnukJ4JWfvchnv/AcFhGgxNHLicutlK9eS29HK8raEgxCyFUgaQMYD43wjrpJy7sZ/3Ov
      2aGnwolDH2CzDbFqwzba2ttxegJ89eknGOm+zMHznRiNJhKNPrzhBEbPXZ3eHGDztm10t7Zg
      iY1h2B/DFz//ME88/hR7t66OVH0kixRH/xjJualzHvy2efsu7MM2zMk5bF5VyODQGACKrjI4
      NMTImAOHy8HYSBeDbvtkPYCg+Wo9bn8YxWCmeu0azNdksmrNxhul1q8bT1uXYYkFkiNdL8ki
      w9bQQ07FXO/+6vzj3/4NT3zjD0gKD/Djt8/yR7//DQb6eui82sim+x+m9sM3eeaFb/PRR4fx
      99kn2wjTOfLOK7z4zlkSFY3v/ehHJE+xV5QbYZFjMdnQNZ2TPz3Atq8/cGOPAeZiCKRx5ugx
      vKpgeWkRLW0dxCWmkp+RQm5hAZdra8guriA72YLDpxOy2ybrAQzsfvhJrrZ0YddTsc7t4R3J
      EsA76iY20Tqh8c8NRjbu2HVDxEXFpRP+d8OW7Td+zogBkZIw+SRYV0MMDY3i18MEdTBLEUim
      wWBzL9nlC2fz604oijL5JFjoKk6nnc6+AYwLbA1XsrARQjDcZiNzec58uzIlJu0BOhovYUkt
      oSzeR0iHOLlfLJkiQbcfBYhJiJtvV6bEpAIwxyWSlZ5A9eaHSJLhcpJpMNw2QMby3AUT/HY3
      Jn22L1uWR0tzM6+/+M94ZpamXRKlDC6w4Le7Mfngxmgk3gIQ4qf//NqcOiRZvISDYYJuPwkZ
      d3896UJhcgEI0IVCYekqvvnCl+bYJclixd49TGpBJsocZn27Vyb1VFHA7nBimfN1XMliZnz3
      N3++3ZgWkwpAV4OEVR2DwbjQIlklCxRd03EN2mf0WtP5ZNI1npikXH7nm8/jIYFYuQkmmQIu
      m52EjKQbRzEXC5N6G3TZ+Pmrb+AdC7Bt7x7S5EhIchcGm3rJLl9cwx+4gwCMlngqV5bh12Jl
      LJDkrgghGOkYpGRbxXy7Mm0mnQMc/+BNDp+uw+50EdnzO5KlgN/hxRxrxhxnuXvhBcakPcCm
      PZ/ht8zFpCh+NKkAyV0Yaukjqyxv0ez+3sqkPcClM8d58/VXqGkdIGbxLOlK5onBpn6yFtHu
      761M2ry37N6H0TtM7flaAreEQgiho1072Kxp438LISJ64FwyNwRcI3z00QFO1dTRcvki7+1/
      h/4xDwBjtm72f3iMoHuUd97ej9MX4GpDEwDhQAg1FCYuyTqf7s+YSYdAisHE3s/u4/zl3glJ
      mi6dO8XJcxcoKy1k1OEiK68I28gwYb/gheeemiufJRHAYLaye+c2/vbvf84f/u63EO5+Tl5s
      5ekH1oE5nu62y/RkqiiovPLGu6woLmSlgOE2GxklOfP24ot7ZfJFW4NCc0MTBj1+wiQ4MT6W
      9GWl2EftPPTwXt569zAXzh7ia9/9vkyLsshSltxOyDfKj//pdV741r/iwvEP6Q0k8OQjq1FV
      laTkZISuU1S1nWHXMVT/GI7RPt47bGXZiJ2S7RVT8m0hpUW5zuQ9AAqaFsLhN2O+RdgffnSI
      ldVbySxM5sOPjrN+w1qWFRfTVX+GTWWPy7QoESTSNhxDQ+QVl9LZ0YnDGyAjOYmBwT7aOobI
      TTYQa7XSP+IhPSOHNZu3cvjDg2xYV0LLq12k5KZNKff/XKRFme7nNGl2aDXg5u139uPxajz9
      /FeJm2KblofiI8dCtDHcOsBQSz9VD2+cUva3hSiAOxyJDHP04w/Y/9HxBZfWTrIwUEMqVz+s
      Jb0ke1G3kUmlIoTOsuVr+M6XnsGyiCsniQx+l4/L+2sQQhCbuDiOPt6JycOhDSbilCCvvfar
      CcugkuhG6Do9F9upeeUoRRtXcN/vfW7eX3x3r0zaA2ghH/WNrazZsH0x925RTVfzZRrbuyiu
      2AiuTmzBRO7bXIXQghz86CCG+DSKMuJotXnYXLkMN6ksS79zGnO/08vl92qISYhj29cfwBy7
      +MIeJmMSAWi8/LMXMZgtjIyMIre4FifZhcvRQ26OX7jMIzvyOfpuC/dtrsI31EqPJxZDVw1t
      1jSSjArHvaPkF5ezLL30E/cRuqDnYhtdNa1U7FtHZsnCS3d+L0yaGzRkSOa/fu9bKIpBRoMu
      Upprj3JxQPDckw+hBwdu/D4+t4rdVTq/fMPOC7/zLHVnT9LZN4ruryOvtJSsW1qEz+Gl/p2z
      xKclsv2FBzHFLL24+EkFUHviY8acDkyWRH7vO39A/OI64yABnK4wualW2jv7GO27SlyMn4a6
      85BagGNolL0PP0FORhr24jI2rDFzvmWI1GvtWwhB17kWei60UfXIxvFzvosw0G0qTLIPIBgc
      HCY7O2vaN5P7AJFjrmwEXX7q3zlLUk4qK/euwWSZPZsLcR9gkpI6P/r+H+NQctl3/24efuxR
      eSwyCnANOug824TL5qDq4Q2k5Gcs2af+rUzyWDTyb/7oT9lQXUZyegampf8ZRD1C12k+VMdI
      +yDbvv7Akh7y3M6kfUVyciL19fVcPF/Hpu1bWDxpjiTTReiChgMXsaYmsOYLW5fkRPfTuENu
      0CTys5Lwm7NlYtwljNAFjQcvoWs6VQ9vQIvCcx2TBsMJoTM2MkJYh8ysrCmnSJeT4Mgx2zaE
      EDQfrifo8bP6c5sxGAwRr8dCnARP2ipCLhv/4Y//hDd/9Q5BGQqx5BBC0Hr8Cn6nl9WPbo7o
      w2GhM3nNFQVNDREIBGVWiCWGEIL2U424h5ys+fzWKcXxL2XuIAAjyYlW3G6PFMASo/NcM/ae
      YdZ9YVvUN364kwAMRvLz83C7XHPsjuROnDpygNdffZW+oRF+/o9/R9uwD4Cgx85PfvgjRkMq
      B/a/xZFTtdScPkXotnw2Qgi6zrcy0mpjw1M7MUxzrrZUuUN2aANWq5XB/n706FgOXvBs2b4L
      +2AvYSWG4sxkPIHxc69maxI5ybEEdcHI2Bgtl2to7+mnqbXzxrVCCHovdWBr6GHDMzsxmGTj
      v86k0+XW9l62b1lHTM5KEm/5rJrrj3Pg3CDbl8fS5FDYVl1KbUM7QU+Qrz77xbnyOQrR+aef
      /JhHvvLbFGcm0n8tA8PI8DBpmZlcT8jw5JPPcOjoGewuO02XaqkuL0EIQf/lLvrqOtn05T2L
      LnltpJk0HPqVl36GyxMkMyEB+9OPk3at1Mrq1Xx8vJecotX0jtTS3m3jyP43ZFaIiGeFUFlR
      VklL/XmM4ZXYlUQ8HQ0Yk2NBD6JkZNN6oZ6UqkKq128kaO9FjU1DVVVsDb30nG9l/TM7wcCn
      +hnpeizErBCT7gPUnT2K25SBRfWwccuWG+OkhotH+MXrJ/nqVx6ns+UqiVn52N0ePHY3X/ny
      k+hyH2DB2BBCMNjUR8fpRjY9u2dKeTujcR9gUgHMFLkRFjmmakMIQdDtp+HABdxDTra98CAW
      a8ys2pgpC1EAckC4yBFCoIVU7H2jDLf2Y+8ZwWg2YrHGsHzXqik3/mhFCmCRIYRA6ALPqIvh
      ln5G2m2EA2FS8tPJWpFL2Z7VS+a87lwgBbAIEEIQ8gawdQ4z3NqPe9hJfHoSWStyWfP4VmKT
      rFETvjzbSAEsYIQQOHpHaDvZSMDtI6cin9IdlSTlpMoGP0tIASxAdE3H1thL59kmYhOtrNi9
      ioSs5IhPtKMR+YkuIML+ED2X2umr6yS9KIt1X9xBXPL48CbS2aejFSmASVBDfrxBQZLVTEdn
      NwXFJZiNBoI+Nx3dfaRl5kDIS1JGDmG/lzjrPbwcQoDP4aHzXDNjXcMsW13Etq89sCjft7UY
      kQK4HV3j5Eev0xEoJFXtZcWatbz8y7f5+pef4NzH+xGF68lUXbx/+DiWuGRSkpK4f8/2aZsR
      QuDoG6XjTBNBT4CiTWWUP7AWo4zTmVOkAG7HYGTT5k10HR2ialU5LX0j9PV2AJBXVklTewNH
      ehPISIpn2O6k3z3KgSMGHnlw511vLYQg6Akw3NpPX30X5jgzJVsrSM3PWLRvWFnsSAHchq6F
      OXe2hvYWF3u3PI6hu4f1m3dz5NBh8nLTMRoUhG5my7oqmgZDtNefQVPvfGxO6AKfw8NgUx9D
      Lf0IXSdzRS7Vj23GmpogV3PmGRkKMQvcXgdd03EPObA19DDSMYg5zkL2ynyyypYRlzyz+cJC
      CreYKTIUYgkihEDXdHQ0xnqGsTX0YO8ZIT49iZzKAkp3VMqd2QWMFMA9InTBwb/6NeYYM1kr
      88itLGDVQxvkiatFghTAPTLU0k9CZhIbntxJXEq8HNMvMuSp6Hsg4PbTfLiODc/skhPaRYoU
      wAwRus7ld89R8eA6GXK8iJECmCHdtW3EJlnJXJE7365I7gEpgBngHnbSe7GDigfXymHPImda
      k+De9stc7vGxoSSVkxca2LBxA0N2J36Hg927774TuhTQVI3L+89R9cjGqMukvBSZlgBSs1Pp
      +OAy/gGN3Xt3sv+jY1y+dIrHn/+3UZMVovXoFdKKskjITr7hd+SzQiwNGwsxK8S0BGA2mQiF
      QiTExtLV00dicjLl1evo6WhBWVuCQYglvRM81j2Mo3eULc/dN2Gdfyns0s6FjUW/E9zTPsTW
      rSupXF1NT1c3jz20CZcvQDjgn7ajiw01GObKB+dlWsElhowFmiJ1vzlDamEmBes++S7dpfB0
      ngsbC7EHkKtAU8DW2EM4GCZ/Tcl8uyKZZZa8AEJ+Nx8fPo4QOhfOnuDQsTPoAELj7IkjHD9d
      S39XKydrLuGx2xgYcU+4PuDx03z4Mqsf3SRj9pcgSz4WyOPxUX/pIg/s2sSZ8/WY9TBrt2wl
      TTg5U9dKrBKmvTMVq6LgHO2nYvUGuPZaQCEE9W+fpWLfWmLiY+e3IpKIsOR7gLTMbKwxJjTV
      ByYrSVYj3oBK0OfEZE0l1qSwY+sWYmJNdHcOcPrQQZzh8cbffb6VuOR4MpfL3d6lypLvAXra
      G9CFoLXXQXFuMn41FXXgMh1x2eQnG9BNRRQWFuIctVNdbuRi2zDxJvCOuumubWPHN/bJ3d4l
      jFwFmuwaVeP0zw6y6qENpCxLv2v5pbBCMxc2FuIq0JLuAYQQDDb2MtJuwxRjxhRjxmgxYbKY
      McWYMFlMGC1mTBbT+P9bTAgBzYfryFyeO6XGL1ncLFkBCCHoONXIcPsAy3dVITQdNaSiBsNo
      IRWfL4AaUtGC4fHfh8KoQZWg249r0MG+f/+F+a6CZA5YkgLQNZ0r759HaDobn92DwWiY8hBI
      6IKg109s4j0ku5IsGpacANRgmNo3TpBWkMnyXaumHXylGBTZ+KOIJSUAv8tH7WvHKd66kmWr
      i1AUJeLRh5LFzbzvA/g9DryBMELXaGtuwuMPARAOeGlobEbVBV0dHWhC4HQ473gfp83OuZeP
      UPnZdTcav0RyN+a3Bwj7eP2nf0vpZ79NqPkg6RXbSAuHIc5CW2srRtXOP/3kQxLSsjFc7qAg
      N4udm5In3EIIwVBLP82H69nw9E4S0pPmqTKSxcj89gBmK5vXr0YBWjq6GOm+yqET5wHISk/i
      w+NXeOyLT2E1Al4bTZfOcOJC643LhRB01bTQcbqRLc/tlY1fMm3mtQcI+51cuNKKLyORLZs3
      0z3mxhSrc+jISepPf8jydbsI6Waqy4sIx6Vw8vARuDak1zWdpoOXCLj9bP7KffIF0JIZsSh3
      gtVgmLq3z2JNTWDl/dWfusQZba9JXcg25E7wPSKEYKxriObD9eStKaZg/XI52ZXcEzN6LAqh
      Ew6HbxyEn60D53fD7/Rx8qcHyF1VQOGGFbLxS+6ZGQ2Bzn70Fh0BK1tXFXDyYgOqX/D1556K
      +BBICIF7yEFCRjIG49S0K4dAC8fGkhkCla5ax+Cpk1xtUTj98bt87bvfn7O0KNb0RHSho6tT
      63VmOy3KZCyFlCVzYWPRp0W5TiAYxGiOITMzncee/QZd9WfYVPb4kk+LcieWwtN5LmwsxB5g
      Ua4CTQcpgIVjYyEKYN5DISSS+UQKQBLVSAFIohopAElUIwUgiWqkACRRjRSAJKqRApBENVIA
      kqhGCkAS1UgBSKIaKQBJVCMFIIlqpAAkUY0UgCSqmZEAnEM9vPPuewyNDHO5pY2amprZ9ksi
      mRNmJIDDh46xef1KPvjwIK+++Pd4RMJs+yWRzAkzEkCMyYDD4SImNpbc/AJGR4Zn2y+JZE6Y
      0fm3Bx79HOcvNvDYw/uwu30EvW5kDmbJYmTWzgTrun7jzOd0r4vked3r1YvkOdRI12Gp2NB1
      HUVRFtR3MWsnoA2Gqb+F5Xame5B+OszFoXiIbB2Wko1IH4qH6dVh3lMjRrphzkX2uEjXYanY
      WIh1mPN9gGAwiBACv9dDKKyiqSE8Xh9CQMDvQ9UmJrASQicYDKHrGm63ByEEXo+bsKrh93pw
      OF2fmH9ct+F1u9F0QTgYwOcPIISOy+VC0ydeEQ6F0HRBMODDHwyhayoutwc1HMJut+P1BW7z
      SVyzoeN2jdv3+7wEgmHUcAj3tfp8Wr3V8LV66xputxv9tgt0NUxY1VFDwXH7Qsftdt+8h6pN
      4lPoxv1u/ZyE0AmGwp/4LsLh6/X24w9cu9bjBSHwuFyEb7eha4RCYXQtfKOc+9rn6fW48QeC
      k35O18vpAoJ+3zVfBD6vl9u+CnQtTFjVrtXbP+HzcbucuL2+T603gO9avXU1jOtam5nsu/B6
      3HPbAwTco3zv+3/Nf/zT3+OVN45gMEK84kcLw+7Hn+DNH/2AdU//IXuqlt24pvnKGd4/0UZV
      XjxhLQxxyQyN+jAaFDxDnWzctY+N194xAGAf7OGHf/8LfvfZz3Lsqg1dVwk7hgirRkpKM9HN
      yWzevI1kqxkAPezn7/7yBzzywu9y+sAHhMI6GWkxxJsEhux1WL3N1PYa+f2vP3bDp/7OBv75
      zUM8vrWMLp+ChoGhtjaM1gQSzGGEKtj++S9RmDr+rrGgZ4z/8t//ij/7T3/IS68dxGiCeGMA
      PQyG+HgS4izEZJTx4NZVwPiX+v5L/xu98hl8zUcJhjSSUpMwm4wQk8jwwBCGmDi+9uzNN1m2
      N9Xy1seX2FqWiSukEdIUPNfa4/oVKRy+OMjvf/NLN8rrYT8/+eEP2Pfctzn78YcEQxrpaVZi
      ND+pK7eC305L5wAvfOXJG9ecP/YOdUNxZBocGDQ/QWMShoQk1LBGWU4aJy/U8fHrHrQAAAQb
      SURBVDu//U2uD0CGelv5vy+/y1f3VnPVoaB6nDidPlDgi4/s5L/9j7/jz/7iB6RauFHvD17+
      G9SyLxJoO04oqJGQmoTZbMYUn0597Xk+98QXqFheeMOnjqYLvPnRBXaUZ+EI6oQ0cAcEIEhQ
      vGQWV7Fz87ob5d1jNv78r/+Bf/evn+W9Y1fntgeITUynvGQZSkw8STEGhodG0HUNp8/Hifd+
      RdBspc9mm3DNyqq1xCg62dmZGBVBV+8IXtcYOgbuv38vNceP47/lQZWaXUBhdgrxqemYEAwN
      2NDUMP5wmNbWbiz+Qc5f7rxR3mCOo7pyBRjMpCZZcQ4NowIDww7SsrIYHBjjmScfmuBTXslK
      0hNjSM/ORlN1bD29hMMBwqqGoms4PD5Mt3TFMQlplJfmoVjiSY4zMDI8itB0nF4fuTnZIAQ9
      3X03yiuKwprq1QBkpKcQdjsRcUmAoOHiObJL1iKCE5+EyyuqiDcbyMrKRBE6g2NeYo0wODhI
      +eo1WAwTn4IGcxyrK8sQBjNpSVZcw8MkpKdjMQn6RgP0tTezbcfOCddUrl6DSRFkZ6VjNuqM
      +kBXdYYGBkmIV9B0I7d2x9kFy8lOsZKanYsW1hgcHiEl3sLY8Ag/f+U1EhJMDI7efO3VeL2r
      r9U7lbDXhRaTCEKnd8DO3p2bOHrsxASfSiuqSLAYyMzOAgSDY17ijDBoG2Cgb5D22pMM+W86
      lZiWQ2leJpaEZGJNczwH8IzZGHO6aGobIC83nbT8QhS3DXNMiD2PPo7ad5VBS8EtVwga6i7i
      co4Sl7KdYN8Q9++q5vKVVuISk3A5XKTnLiPmljnPUG87DqeLfnuI9AQTeTu2M9LZhDVsoGpl
      Pq0d3VTk3nwBdtjvontgmGBrOwV5uWBNIytWZdRkJsaoYUzKJjPBPKEeXS0NuJwOvFiJU8Ls
      3L2ThvM1GOJTSLGEMMYEMd4y9fDYBxlzumhs7SM/N4O0vCIM3kFMsUGycpbhttvZs2vjzVoL
      lSvNPQwYTewuL8AZMrKtupza87U88ezzXDp9gpzCkgk+NV+ux+UcwxCfjo6NB/ftZaDlCjmF
      W2moq8M5NoQ7oJEYa7xWbzfd/cN429opyM9Ft6ZSVZTP2VE7lckuTvQnEg7cKjKdq1euMjY8
      SGr1dvqG7Dz20E6uXKihZOtGugcGyMnKmDAc7e1oxuV0Yg+ZSTKFKbnvQcKjPcRn5vLQ/bs4
      8fEB8jJuvvJKCI0rTV0MILhvVT6OoML2tZXUnq9l1/Y19Lc0kZ+fP6HeLVfqcDntEJcGwsYD
      D+7F1naF7MIdKB4bfcNeEi03v4yxwR7sThedA06yU+NnNzWiRLLYkMFwkqhGCkAS1UgBSKIa
      KQBJVCMFIIlqpAAkUY0UgCSqkQKQRDX/H6bVj3Rb1wtAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3s_att_vs_3%' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='SAC_players_test' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='allnba_award_draftpick' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdJ0lEQVR4nO2deXAc153fP90zwNyDY3ANbpAgCZIiKMq6KFE3vdZh3Wuv7a0tbxJXLmfL
      lWuzduJUvFu1q0o264q34s3uVtZ25Ei2FMdrKbZMm5QoirR4i5QIkARI4iLOATCDua/uzh8g
      QQJoYHoGGFzzPlUszqDfr/vXPe/b7/V7v/49SdM0DYGgQJFX2wGBYDURAhAUNEIAgllcPnec
      w0eOcaV/ZN62E0cP0919hXAibWhfUf8QndeGpr9oKidOnARg4NIZDh75kJGxsdkGSpLDhw/T
      1X0NRWd/Z86cnfe33r4+VCVC58UeQz7NxZyTlWDDEpjwsfP+p/nwvZ9z/miATdt3M9h/GYen
      hY5zn1BT2stgMIXv8nHqGjfhDydxOl2kk0k0JUkyHiKZVGhsqmN0eAiL9w52bIJoYASzowKA
      oG+Ize3PMuDr4pf/92327L2Hro6PaGnbxceXe7lysRPF9BnOf3icvQ/t5ej7v6GsthklGmBs
      4Ar+pIWGKgfOijpOHjnI0y+8wPBQD1e7LlDsKiERGCWtyTz1/MvYMtRw0QIIZqFpKmND/Vjs
      pRQ7PdQ7UySLywmFozQ1tbBjazMeTxkWl4ctdeU4SisIBQNMTU0yMRlAlcxUl7sYGvVR461B
      urHfrq4etm1rnjnO5NggDjmGp3YTRMexOR0kFBMtLZvZ3NJAeXk5jbU1dH5ynnDazObmekDF
      NznFjm2tBCMxar011NU3UuqyEQ8HSJsdJCIhpCIrHmcxaTXz+UpiFEhwO9FQAJ8/TH19LdFI
      FKfDwvDoBG63G01VcNgsjE1O4bBZcTqd+EaGcXuqCPl9SMV2LGYZkyxhLjIz7pugpLwCh9XM
      8ZNnuf++ewBIREMMjfmpb6glHk1gLZYY94coLSkhrahYzRCIJEjHw7jKq0mEJpCtLsyShqSl
      CcUUPG4bk6E4bpuZhCZTJMuk4mFMthIkNYUsgc3hQpYWP99lFUAkEsHhcCzX7gSCvLOsXSBF
      0Xt0EQhuoWka3Rc6SKy2IzcQzwCCFUbBrEgkV9uNGwgBCFYUSTJjsaydwUchAMGKoqXiTGkK
      4wPDrIXRl2V9CJ6cnMRsXjvqFggykVNtHe67QsflbrzN2xjt7cbT0Mru7Zsxm8243e7l9lEg
      yBs5CcDb1ErPxXMkkjE+6rzKC9t3oygKqqqSThubJhcI1gI5CUBTk1y8HubL+7eys3Uzr/7v
      H/OVf/RlZFkWXSDBuiKn2pqKBnlo/5OgJDl94iQPPb5/uf0SCFaEZX0IDgaD4hlAsK4Qw6CC
      gkYIQFDQCAEICpq8DNl0n+8mPBXKWM5Z4mTL7q35cEEgMEReBPDxsfNcv3o9Y7m6TXVCAIJV
      RXSBBAVNTgLwT/gYGhommUox7htHUddCWJNAkD05dYHi0Qhv/uh1du7aSVIrRrNV8syjn1pu
      3wSCvJOTACorS3FVb0aLTPGpR5/hwKHjs2KBNIOBrpqmidghwaqSkwB6Ll3kof2/RWl6lMPv
      HuJTd+/DZDLNxAJJZHgT+QaSJInYIcGqklPt23Ln3hufSvlc47ZldEcgWFnEKJCgoBECEBQ0
      QgCCgkYIQFDQCAEIChohAEFBIwQgKGhymgc4e/x9JuImWj3FHOkc5rFHHqKxpny5fRMI8k5O
      Ajhz6gyVNXX43a24i9MMjoxTV1kiQiEE646cBFDfUMdUKEI8bcZtK8YfCIpQCMG6JKfa9+Tz
      n0dRVUyyjKLsxGQyLbdfAsGKkJMAJEnCfKPSizu4YD0jRoEEBY0QgKCgEQIQFDRCAIKCRghA
      UNAIAQgKmpwEkIqHOHHqLKlUkrOnz5AwsiS3QLAGyUkAb772KkkVThz8GbLFws8OHF1uvwSC
      FSGnWayEWoQzNsTBjkF+965HuXB5QKRFEaxLchLAo/vuo+PaML/3pZc4efw3PPzwoyIWSLAu
      yan2tbS109LWDsBzzzcuq0MCwUoiRoEEBY0QgKCgEQIQFDRCAIKCRghAUNAIAQgKGiEAQUGT
      0zzAkQM/J17sZpvXxbELA+zb96BIiyJYl+Q2DWuSCE76CJZZMEsp/FPhBdOilFZXUlruYHJ0
      Ck+NG1//COFwAhChEILVJycBNDRtJnj2FFHJTVtzDVd7r7N7W6NuKEQkFKGqrhyzxQwaFBWb
      gWkBiFAIwWqTU+2r9nqxP/E0FaVORsdK2LGnZsGyFouZUCiJxaThHw/jKnXin4zk7LBAsJzk
      JAC7043dOf25tta7aNlkPEnYN0Y4GMNZ4uB6z0QuhxQI8kLe+x/JWJxkbPpzyB/K9+EEgqwQ
      w6CCgkYIQFDQCAEIChohAEFBIwQgKGhyEkD3hY84dPgDAoEJ3jv0LpOh+HL7JRCsCLktkXTm
      DFVb2jl75Fc0tj/AgUNH+Z3nHkfTNFRVNZgTAjRAVUVOIcHqkVML8OznvoQ1MMCl4eBy+yMQ
      rCg5tQCjA9dIlTbw+w8/wfETZ/jME/uQZRlJkqb/N7gfCZBl8RgiWD1yS4uy7Q5abnx+/Ikn
      ltEdgWBlEbdfQUEjBCAoaIQABAWNEICgoNF5CFZ49bvf5qOro1isbv7Dt76JQ7y0Jdig6LQA
      Mr/9xS+QSqUJT/hQjY5pCgTrEJ17u4TZ4mB3ezv7n3wKl1gEXrCB0X0GUFWFq50f8YPv/ZCw
      TtKG2NQI//Gbf8rl88f53o9+Rv/IZL79FAjygm7v3mQqQtYUxv1+XaMDvzyE11sOthLKrYP0
      Xh9ZMC3KYoi0KILVRlcA6UQEi93BeN84ms4zwB27d9Pz1s+JJTWsRSYSiaRYIUawLtGtfVKR
      hfKKKh5u2U2xTl1ubbuDf9l2x/SXO3bk0z+BIK/ozwOoabq6ukmmU2hGY5sFgnWIrgBMRXY2
      N9Vw9L33SYhwfcEGRrcLpGqw++69mBxeTGIeQLCB0RFAmq9++QtUbG3H6m7BIeYBBBsYnS6Q
      iVf+8q+5Z9d2UqFxIsrKOyUQrBS6M8Ge6nqeevZlHn9SwS5aAMEGRvchODE1zFe+9AX++df+
      SLQAgg3NAqNANp7/3IvUV1frPwRrKmdPnyaRiHHiw+NEE2I2V7A+0R0F0lA5c/ojVKu+AK5+
      coK33vmQ8ZEe6lrbeftXR/n8Zx+Zts1y4iDb8gLBcqL7PsD/+uvv0HFtCKt5krgKljntxMmP
      OiAxwcCIgx13l5FK9szkBJrOC2QwFghN5AUSrCo6ApD5/a/+ISb7/ySYslKkY/TFL3+Fjo/P
      U1fv5eixEzzx2GPIsowsy5hMJuOxQEiYTOIpW7B66I4CpaKTdF4b5Zlnnsa8wEuTO9t3A/DZ
      Z5/No3sCQX7Rqd4a13r6cdsk3j/yIUnRQxFsYHRaAJWOjz/B7i7DVOQ0nOVNIFiP6L4T/PiT
      z/HAvXtQEjFEAyDYyOiOAv3xv/sajvpNYKnPKRaovLKMdCKZsZynsiz7nQsEy4iOAEz8629+
      i0OHDtFxZZyoAs4sX9pyuh2kyksMlRMIVhPdqp1SNPY//dv8g/qFF8AWCDYCuqNAP/n+X/LP
      /sXXeOW/fEc3K8RQbzenznUQD/t579C7IiuEYN2iOxH2b771F5T91X+nyLtZNyuco6yKkRM/
      ZaLfyWDSzV5P5u6OQLAW0e0CJUI+usdimK8eJPjiM5TMKaUmggSjCg889hke1Hy8+da7fOmF
      x2+lRTEY3yPSoghWG10BWMvqeWn/vcSt1bh1SvT19VPubUAKj/Jh9xUefuC+2WlRJJEWRbA+
      0H8IjgWxVbTgTARJqGCd86Rw5z0PcueNz82bWvPsokCQP3QjfY4e+An/6Vt/zGtvHRIzwYIN
      ja4AHvrMi9y1vQG300ZaTAULNjC6AlCSUYZ9IZqbGkVaFMGGRlcAcrGDXW2bGBvzoYoXtgQb
      GH0BmC3sunMPg1cvIwYpBRsZ/fUBUjFe/7vv4pfc2MQqYoINzAICiGKp2oI7MUFMPAQLNjC6
      8wAWVzXbG8uIWu/AqRMOfenjM3R09dC+q43zH19i+6ceZOcmb759FQiWHd33AV75z/+VP/r6
      1/mrV/6MoAKlc0pV11Tx68PHUOJBHnnqBQ4cOk5bU5UIhRCsO3SD4VqrHXzjG9+guKQet04L
      MO4PUu9xoVidnD55Ek9VtQiFEKxLdLNCfO4f/gEvqxqSJKNXl73eOkqffIGKshImJiYo81Tk
      39M1QiKeIB6JGyrrLnMjyWIiZS2zwO1XQl7kh3O6S3He+FxRWbn8Xq1hOk92cuRn7xsq+0/+
      5J9itVvz7JFgKYhBTkFBIwQgKGiEAAQFjRCAoKDJ+xjkyEgvA2MTNNY2MDw2RElZHS3ewnpw
      Fqxd8i6AqopafP4gTlcZntgUkllkg16rKGmFiZFxQ2VdZW5sDluePdJnfHgcVcm8dJHVYcNd
      5l60TE4CiIUDDPmCNHg9dF/pobq+mYpSp27ZcxdOYS+tZXLkCgOhNDvKxLDgWiUSivD6t183
      VHb/73yanffuzLNH+vz93/49kalwxnI779vJ/s9/etEyOQlgeHiEjlPHuehw4ku7eall4feC
      t2/dTSKtYLVYcJXFsRbrrTiwjpEkqhq9xAN+glOx1fZGkCW5tQDBcfC08Pi+uxi8dpED753g
      5af26cYC2exObjaUVsvsu/96jAXStNnhscXOEuRkGE9dDcGpnlnbFEVZV+enGOhW3OTmb70q
      LGOsWU4C6OrqwV3dwPDQMD2D4+zauadgYoEkafbAWTIcRKqsxWadfx4mk2ldnV82q/Xc/K1X
      hWWsXzmdwYtf/L2Zz5u3bM1lFxsKTYP+7v7VdkOQA+vn9rRW0VRGeq6vtheCHBETYYKFkc3U
      tdbTtKVutT3JG0IAgoVR0wxeHUZRjT8crzeEAASLUtnkxdc3stpu5A0hAMGihHzjJNbPSG7W
      CAEIFsXo22/rlXU/ChQLR/nhn//QUNkHn9nHjnt25NkjwXoiJwF0fHSCc+c72bRtM729QzTv
      vJu97auTJl3TIBqKGiqbTm3gtlyQEzkJoK6+ltOfXGH42hWeeOolfnnwGPfubFmVtCiKMt++
      rLYKT6Wb/o6rJNO3fFmO6Xub3UpNnbFwbk1bxXCBHBChEAZ59XvfZ8uefVS54Nfv/IKmbXet
      WiiEyTTfPhqM4q33zEvsuxzT9za7lTJPqaGyZnORCIXIB6sdCvEHf/jNmc933Z/LHvQZ6O5H
      UTLnYnSVuvDUeBbeXuYimdKwFMmks7irFTqyJOFw2Q2VLSpaP8JejDV1Fu+8+g6xSOaQ4vYH
      2nns5ccX3D4+MMz4wPByulYQmMwmGluMzfoaFcpaRwyDCgqaNdUC5ILJbGLbHcZGoErLF389
      TlB4rHsBAItmsbsdow/ngsJBdIEEBc2GaAEEhYunvgaXswjfaJgqbwlD3X0kUsYXthMtgGBd
      4x8ZR5NNlJfa6bk0iqe2LCv7nASQSkTpvtpHLDjOwV8fpH9kMpfdCARLpmFbExPXR0nLMqVV
      JaRj2QXv5dQFGh3u4+13jvLknXX0+uH+UtdM+IOmaWhaGlVLZtyPxuJhE5WNtVhMCtd7Rufb
      ztgZb+6mfVu5dV81VvZ4K4rGmji3wJgfq8PG6LVB3B4nY+Oz48Iy+ZiTAOqbN2Ev/pBtez9D
      s/86P/n5e/zui/tRVRVVVRlPv8FI+lzG/Sip3ajqA7ecvX2jZMJmlVGLbRQzyu1y0jQNVZ2e
      MVZ1Zo5DwXHGQgk21dbOGvm53S5X5qZFWYyb12O9kI2vqraK53ZbpZ7y3ep9BMaDc4pl/r1z
      EsCVzk5cThtXurroHxjg8UfuR5ZlZFmejicxHKsxO/5klpWmMBWI09hawtw5XUmSZuxknfiV
      7v4B7EUmwqlqXMW3TnHGvyUwNy2KPxig1FVC/8BV7CXVVJa4ZraZZNOSj7eSyLLxHvFyXMuc
      ySIWKJOPOQmgdcceWnfsAWDb9u257MIwfR3XyDaap0hSCUaT1C7S+o0NjnH07Q8M7e/h5x+h
      wjt/GahELMiZS508cff9eDzVdF69QmX7niy9Fawma3oYdGrMWKLWubhdLtKRFFbzwne0RDTO
      QPeAof0lYgndv1tsbqrLS5BkmYB/FNlcnJO/a5F0IsKvTp/k6Qcf41LXeSYiKnv37Nlww4Zr
      WgC50tS4laYVOE4kNIHf76d/ZJBgKILdVrICR10ZzBYHDdVVAJS5SzHZTGzEefQNKYCVwuHy
      8PA9+6a/1Gys3DnxSID+wQHczlIuX7pIQ1PbaruUFwpWAJIkYTYY016IMURWRynPPPIkAE0b
      TNy3U7ACsDlsbNneYqysWOp0w7LRnmkEgqwQAhAUNDl1gXq6zvPBR3381r2beP9kJ9v27OXO
      rQ3L7ZtAkHdyEkDL1jYOHD7DJ2cCPPbp5/jlwWPs2lx7K1VGjmkryitLSRhYeM3utM/YpZU4
      QeWYoePFlXLS6ekHOr1F1s5fOIXZUcHOltnPBrev9JLN9L+ipJHS6+cB2khCgpuoSgGnRRm4
      1k1fby/trfdx5L13qa7dPCstSq5pKzyV5aQSmYPo3CXOGbuUSSGoHjV0vLR074ydXgiFJEMi
      FkVldt/w9pVesgkXMJnM6ywtShahEKYCTotSVbuZb3z932Kz2UkmE1htq7Nc5vKi4HKUMzru
      nyeA1SQwHiCVTGUsV2wppsSzcSbiVoqcBGCx2ri53p3ZvDHSY4CJ2ppavN7GNTU2fOC1A4z0
      ZU7x0ritiRf/8Ysr4NHGIu83ulQizagvTiqR4mKnn8nQ2k0VaLHYNt4yroJFyfvNLp5QmfAn
      KErLRNMS1mLjmlPSScLxJCVO/UW4C4H6Ji8OmyVjucr6qhXwZuORdwG43MWYfTHclQ52e1S6
      r0XY3ubKbIhGx+WPsbgqC1oA5iITxQZaJbN5/bx3sJbIuwDGhsNEw2kCU0kmxuPUNxqp/AAK
      oVCMVHKYcG0TzmX2NKkNMZr6O4NlW4ByAKJap2E7lUeA9dOlUogYPrdN6leB6bkf/+gkF09c
      MGTX/tAenGVG60D+ybsAqrxOqrzTd/AKTzYxNWaqqzwEommsebi5aVqKFD5jZbk1CqNqMcN2
      2byvvCbQFMPnpnLr5fN0Kk3YHzJkl00K9pVgLQ14zKN1k1jNRTAfT2UpNmvml49c7sxd5yUJ
      IDTWz3snO7nz7ntprClfyq6WB01jdDCExeNEiyQYn0qzeZMLg5kT1wXpVIxL167Q0LiVEgMP
      xxuR8ooyHPbMc09OtyNjmSUJYLj/Gv5oHJPZjKqqaJo23cQZnapmbpNofIr7pt3t0/caYJFU
      AjENJZCizC4TjCmU2qf7UJqqzthllQHhNrusskIoytKb/DmXpOfaZeKKNG/dA01bevdCyeKa
      3H4tFTVGUjO2lKqiJpbhmmRfTzRVY3J0Yl6ZJQmgbuseXmqa4q0jJ/jSi/uRJGk6VCCLF0hm
      hxYYtLt5HGYnxpUkCbvdTEADVdVIpTWKpdu3yzN2UhbNgny7XRbnJslyVqET+juZ44tsYlNd
      E8MjQ3hab2XFlqTswjT0MJpkePp4t84tySBj6R8YslN4AFle4pDtvN9A42rPFZpbtmCaVexW
      PUkkErz+7dfn7WpJV0zS0py71M+zTz4yUzGyqiA3yt/8t1Q7TdPoH00Rn4xSW2MlKZtwWeVZ
      hjN2c2uWpjHui+EbT8xvh26zm1sjVUVlbDTGZGB+DNPtPub6by4tm7YxNjJES2Pz8h9vzrlp
      6vS5TUwmF70m867lYkhL93Mu4aCPqwPD6E2xztgs4OKSWgB7iYeHHtq3lF3MYjT9PRKpqYzl
      3OozwB3z/i5JEq1tt3JDOrJcDsBslunpj+CpsGT1ArjZLHF9MEp5af6zQsimYtpaV+r9XImi
      Ipn+wQjl5Ws340X/0CDJ+BSj/gCNZfrrt5lkmda25nl/X1OjQCphFDIPp6mafpqSJSFJWIug
      osqeVbMom2RIK9Q1bLzJOkmWMKkKNfWuNZ0RYkfbHuq8zThLFlu8UKJIZ0JxTQlgtQmGFbzV
      2Ua2aiRUCa97bV3Ky6c6DT3ol9dUUN1Us8BWjUgKajzZTcRoqRSnzgVpaHHirVh4pOpi508J
      BPoy7s/pqmHXri8sWqakJLus0ABDQz1rWwCpeIrTF4LsvXvhFSGXk6qaXCJbJbzetRcRe72r
      HyWdebRFluVFBJDbuSkK2O0ykVAaFhFAf98xBgdPZtxfZdWOjALIBbfLvXYFoGkafQNRSl1m
      NE1b96lJwoEQiWjm1N2yyURZ9a05laQ2QlzNPMSY0mZX9oTWT1rN/B5BWjO25nE2qBqYTRLJ
      ZHbDnbFwkt7rESq9TipKFg4hSWgDxNVIxv2ltMXFOxmYXJoARns7ef9kB213PUB76zLnjtHA
      JEPfQITmFje2tfsMZoi+zh4GDaRitNgtPPK5/TPfA8pBxpWOzHbKPcBzM98nlJ+QUjIvOVuj
      AjyYsVw2FNuKaGvLXlhWu5lik0QsosAiAphMv0VUyZw2s1z9LPDYgtsbG7YsbRj04zOnefSJ
      /Zw7mzkVerZIskTL5hIef8yLrXh93/0FxkilNLxeO6FQ5tdil4sltQC1dV5+c/QDKr35ywix
      3rs+Nwkov2Yw9YuM5eypCmB/xnIbEk3l+nCM5ubljxZViTOY+ot5f1+SAHbc9wQNoTBO19oJ
      b12raCizokoXLpe5zEal2FrE1i35e69Z79pK2jKtc6MoCoFAgKKiIoaGzhCP+WcfXOdB1mor
      o7b2UzPbenvfR1VSGe3cJfVUVLTdWAEkRV/vkXn+6NlVVLbhdtejaRrxuJ/hobPzbJCYN7NZ
      W3c3FksJkiQxNdXPxHhXxmMBNLc8iiSZkCQJn+8ioeBgRjuT2UJT00Mz2wYHT5GIT2W0s9k9
      eL17Zrb19LyHps6NF5pvV1LaiMez9UbcTIL+vvkZNvTsKqt24HLVomkasdgEI8Pn5tnoXcu6
      +nspLnYhSRLDwx8Ri07Ms5t7LIu1hLq6e2a29fV9gJJOZLRzueuorNx+Y2kshd6ew/PObdkE
      ABAMBnG7s1+NXVGUnFYbycXu5jph2cbNKIqCLMtZd8lW8txW2m4p13KtnNvKZP/QNGKxhUck
      FnIulYzjDwQXjBFdyC4cmiIUiepuuz1Aai5qOkV4ATuTyaRb+TVNZXLCt+DxFv7BNKYCfpIL
      jNUvZBcJB/H5fMST+skFFryWiThTwfACvixsF4uEiMb1Z94XupaJeBxV04hHI0R0FhfRO5am
      acTi08PE8VhM9zfXtVMV4okkqUSciUm/7qJ4enZKOkkipayMAHxDvbzy7e9kbXe16xIH3vwB
      vf7s+sUDvdd47dUfklCya9x+c/gX/M0P38zKJjrRww9e+xmTAWNvRN3k6pmj/Oo3Z5mcyjye
      fTvhoJ//96PvcXEokJXdT974Mb/66esMBo1n5VCVBG+8+X94/bUfoajGrqWSCPPnf/anjIbD
      vPmjN3jjx29iZN3qgasX+G//4/vEguN8609eweg40Cen3+X7b/yC8bERzh15m2OXjIVlH3zj
      u/zy1LWVEUBlXQs1nuy7RsWSAhWtNJRm916ty24hrmTXvMUmB3j/1GUmR4dJZbH4ocVVw757
      t/P+Bx9m5WPn5WtUlFs5evxEVnZVNbUo1kp2N81fs2xhNCSSTEaSmGXjNwVJMlPuduCb8BkW
      gMni5I5tLZAKY7JXUmaRiRrQXGNrG6X2ImzuCrY2ew372LaznWJJpaK8hCFfEJfVWF1p39UO
      aCsjgKG+K4RDYXoHs1vz69iJU1SVWonEs2kBFHr7B6n1Vmf1Rq6tvIF///V/xcMP3ktRFlcl
      FY8SCEZoamrM4mjw8KMPMDE8TmNDdos5+a93s+O+R7N+y62yqoaqyipM2UQuSzJ1dV5277mP
      IoNpExNhPyMTAbp6xil3JMFdidtAney53EE4NMWVK90EQmEud/caOJrGxQsXmPKPcaGrhypv
      HSbJyK+u0NHVy9jAVf4/6m5TcENTH5kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='allstarseason_draftpick' width='192'>
      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
      9niDKNsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='college_draftpick' width='192'>
      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
      xq7m/wHOx4bv3iIGpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='draftpick_birthstate' width='192'>
      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
      TdT7CpoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
